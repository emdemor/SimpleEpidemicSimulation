(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    186663,       3784]
NotebookOptionsPosition[    172816,       3476]
NotebookOutlinePosition[    183202,       3730]
CellTagsIndexPosition[    183159,       3727]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Simulation of Epidemic", "Title",
 CellChangeTimes->{{3.796391454133677*^9, 3.7963914561788597`*^9}, {
  3.796411372178165*^9, 3.796411416231979*^9}, {3.796444872667716*^9, 
  3.7964448750155973`*^9}, {3.800921919839374*^9, 3.800921951359694*^9}, {
  3.8009220201075363`*^9, 
  3.800922030682103*^9}},ExpressionUUID->"4341873e-65a7-401d-a7af-\
f57cb3b545f2"],

Cell["E. M . de Morais, IFT-UNESP, Brazil", "Text",
 CellChangeTimes->{{3.796783927634486*^9, 3.796783941380527*^9}, {
  3.8009219134418697`*^9, 
  3.800921915115213*^9}},ExpressionUUID->"8ce6a5c9-a294-4c1b-bd36-\
af6ff0cf747a"],

Cell[CellGroupData[{

Cell["Disease Propagation in a Box", "Section",
 CellChangeTimes->{{3.7939278332952557`*^9, 3.793927848747113*^9}, {
  3.796412687608564*^9, 3.796412688746058*^9}, {3.796613148350439*^9, 
  3.796613179593547*^9}},ExpressionUUID->"c03c1a10-9fb7-441d-a6e9-\
f53a38023b3c"],

Cell[CellGroupData[{

Cell["Defining Parameters", "Subsection",
 CellChangeTimes->{{3.796411479717218*^9, 
  3.7964114863027763`*^9}},ExpressionUUID->"0a396bbb-cae7-4e21-84b1-\
8065898cf6f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Clear", " ", "all", " ", "variables"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Set", " ", "the", " ", "notebook", " ", "directory", " ", "as", " ", 
     "the", " ", "work", " ", "directory"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", "\n", "\n", 
   
   RowBox[{"(*", " ", 
    RowBox[{"NUMERICAL", " ", "SIMULATION", " ", "PARAMETERS"}], " ", "*)"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Constant", " ", "velocity", " ", "of", " ", "individuals"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"Velocity", " ", "=", " ", "0.1"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Population", " ", "Size"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Qtde", "=", "200"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Time", " ", "element"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Delta]t", "=", "0.1"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Final", " ", "time"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"FinalTime", " ", "=", " ", "100.0"}], ";"}], "\n", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"PHYSICAL", " ", "PARAMETERS"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Infection", " ", "distance", " ", "radio"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"SphRad", " ", "=", " ", "0.008"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Daily", " ", "probability", " ", "of", " ", "cure", " ", "of", " ", 
     "the", " ", "symptomatic", " ", "individual"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ProbSymptomaticCure", " ", "=", " ", "0.005"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Daily", " ", "probability", " ", "of", " ", "death", " ", "of", " ", 
     "the", " ", "infected", " ", "individual"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ProbSymptomaticDeath", " ", "=", " ", "0.0005"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Probability", " ", "of", " ", "infectious", " ", "in", " ", "case", " ", 
     "of", " ", "contact"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"InfecProbByContact", "=", "1.0"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Limit", " ", "days", " ", "for", " ", "the", " ", "death", " ", "of", 
     " ", "infected", " ", "individual"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"DaysToSymptomaticDeath", " ", "=", " ", "100"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Using", " ", "colors", " ", "to", " ", "control", " ", "the", " ", 
     "state", " ", "of", " ", "the", " ", "individuals"}], " ", "*)"}], "\n", 
   
   RowBox[{
    RowBox[{"Healthy", " ", "=", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "0.6", ",", "0.2"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Infected", " ", "=", " ", "Red"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Dead", " ", "=", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0.0", ",", "0.", ",", "0.", ",", "0."}], "]"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"Recovered", " ", "=", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0.0", ",", "0.0", ",", "0.6"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", "\n", 
   RowBox[{
    RowBox[{"ListPos", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"SphRad", ",", 
             RowBox[{"1", "-", "SphRad"}]}], "}"}], "]"}], ",", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"SphRad", ",", 
             RowBox[{"1", "-", "SphRad"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", "Qtde", "}"}]}], "]"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListVel0", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Angle", " ", "=", " ", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], "]"}]}], ";", 
        RowBox[{"Velocity", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "Angle", "]"}], ",", 
           RowBox[{"Cos", "[", "Angle", "]"}]}], "}"}]}]}], ",", 
       RowBox[{"{", "Qtde", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListState", "=", " ", 
     RowBox[{"{", 
      RowBox[{"Table", "[", 
       RowBox[{"Healthy", ",", 
        RowBox[{"{", "Qtde", "}"}]}], "]"}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Inserting", " ", "one", " ", "infected"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ListInfectedIndex", " ", "=", " ", 
     RowBox[{"{", "1", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"InfectionTiming", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0.0", ",", 
       RowBox[{"{", "Qtde", "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ListState", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", 
        RowBox[{"ListInfectedIndex", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "]"}], " ", "=", " ", 
     "Infected"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"InfectedCount", " ", "=", " ", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"InfectedList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", "NotInfected", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ListNotInfectedIndex", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", "Qtde"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"NotInfectedCount", " ", "=", " ", 
     RowBox[{"Qtde", "-", "1"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"NotInfectedList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Deaths", " ", "Counting"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ListDeathsIndex", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"DeathsCount", " ", "=", " ", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"DeathsList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Cures", " ", "Counting"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"ListRecoveredIndex", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"RecoveredCount", " ", "=", " ", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"RecoveredList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7939361675933*^9, 3.793936203415977*^9}, {
   3.7939380709498158`*^9, 3.7939380711975527`*^9}, {3.7939381360776367`*^9, 
   3.79393813631147*^9}, {3.793938429173284*^9, 3.793938432056641*^9}, {
   3.793938481417502*^9, 3.793938481602955*^9}, {3.793976133197854*^9, 
   3.793976136570582*^9}, {3.793976310948052*^9, 3.793976315125404*^9}, {
   3.793991875588146*^9, 3.7939918758015614`*^9}, {3.793991955801046*^9, 
   3.7939919616221733`*^9}, {3.793993952929178*^9, 3.793993954042041*^9}, {
   3.793994163413002*^9, 3.793994163749238*^9}, {3.794253490152637*^9, 
   3.794253490508131*^9}, 3.79425356260819*^9, {3.7942538550516443`*^9, 
   3.794253855294774*^9}, {3.794253968405599*^9, 3.7942539758258047`*^9}, {
   3.7942541939686203`*^9, 3.794254194115535*^9}, {3.7942542661441097`*^9, 
   3.794254266289731*^9}, {3.794254366227126*^9, 3.794254366611794*^9}, {
   3.794254438288434*^9, 3.794254440763453*^9}, {3.794254476985057*^9, 
   3.794254477997539*^9}, {3.794254517266185*^9, 3.794254525611558*^9}, {
   3.794254567825397*^9, 3.7942545679883413`*^9}, {3.7963913770253067`*^9, 
   3.79639137815044*^9}, {3.7963915277634077`*^9, 3.796391593540855*^9}, {
   3.796391632995297*^9, 3.7963918455714617`*^9}, 3.796391898855702*^9, {
   3.796391947107587*^9, 3.7963919692517757`*^9}, 3.796392074964395*^9, {
   3.796396071608254*^9, 3.79639622490313*^9}, {3.79639629746795*^9, 
   3.796396297975404*^9}, {3.796396363254837*^9, 3.796396392051235*^9}, {
   3.796396505325307*^9, 3.796396506213484*^9}, {3.796397873758161*^9, 
   3.796397874566347*^9}, 3.796398910732482*^9, {3.79641056767148*^9, 
   3.7964105707495537`*^9}, {3.796411268693861*^9, 3.7964113041702557`*^9}, 
   3.7964113645180597`*^9, {3.7964116398331347`*^9, 3.796411640037675*^9}, 
   3.796412390463306*^9, {3.7964124213758802`*^9, 3.796412424784389*^9}, {
   3.7964126925245647`*^9, 3.7964127111021223`*^9}, {3.796412755900014*^9, 
   3.796412768376521*^9}, {3.796412905350457*^9, 3.796412910387704*^9}, {
   3.796412969280375*^9, 3.796412970104821*^9}, {3.796413230331374*^9, 
   3.796413230854097*^9}, {3.796413293824933*^9, 3.7964132946577587`*^9}, {
   3.796413364946834*^9, 3.796413379885995*^9}, {3.796413459026187*^9, 
   3.7964134593452806`*^9}, {3.796416933207027*^9, 3.796416933983322*^9}, {
   3.796432173063518*^9, 3.796432173274767*^9}, {3.796440575452628*^9, 
   3.796440575457781*^9}, {3.7964406077179317`*^9, 3.796440608430788*^9}, {
   3.7964416171917458`*^9, 3.796441625782216*^9}, {3.796441663838475*^9, 
   3.796441666060639*^9}, {3.796442499970379*^9, 3.79644250020389*^9}, {
   3.7964427305221653`*^9, 3.7964427327608347`*^9}, {3.796442782373067*^9, 
   3.79644278730282*^9}, {3.7964428556715107`*^9, 3.796442856651222*^9}, {
   3.7964429189802017`*^9, 3.796442970176813*^9}, 3.7964430154218893`*^9, {
   3.796443081179707*^9, 3.796443103971566*^9}, 3.796443195298827*^9, {
   3.796443299813774*^9, 3.7964433369584637`*^9}, {3.7964433846995583`*^9, 
   3.796443386617415*^9}, {3.796443751401024*^9, 3.796443752554411*^9}, {
   3.796444115898715*^9, 3.7964441168505163`*^9}, {3.796444155273019*^9, 
   3.796444156701601*^9}, {3.7964465613968277`*^9, 3.796446574082396*^9}, 
   3.796607302888403*^9, {3.796607514587459*^9, 3.796607522219702*^9}, {
   3.796607556087916*^9, 3.796607556581287*^9}, {3.7966076004551077`*^9, 
   3.796607613085593*^9}, {3.7966077292740583`*^9, 3.79660772953951*^9}, {
   3.796607777395612*^9, 3.796607780798601*^9}, {3.7966078924747868`*^9, 
   3.796607894491705*^9}, {3.7966080088918133`*^9, 3.796608013348053*^9}, {
   3.796608060626089*^9, 3.796608073703299*^9}, {3.7966108044999933`*^9, 
   3.7966108540411158`*^9}, {3.796613189206452*^9, 3.796613210990005*^9}, 
   3.8009218386628523`*^9},ExpressionUUID->"e1918e43-7078-498d-b72e-\
cf2daf9f94ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Running the system", "Subsection",
 CellChangeTimes->{{3.796411479717218*^9, 
  3.796411503431814*^9}},ExpressionUUID->"d0516476-c1a5-406a-b768-\
562f79ba63e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"NewPosList", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"NewStateList", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"Runnig", " ", "trough", " ", "particles"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{
         "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
           "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*****)"}],
         "\n", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Checking", " ", "if", " ", "position", " ", "is", " ", "outframing",
           " ", "in", " ", "x", " ", "coordinate"}], " ", "*)"}], "\n", "\t", 
        
        RowBox[{
         RowBox[{
          RowBox[{"IndividualState", " ", "=", " ", 
           RowBox[{"ListState", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "i"}], "]"}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"RefIndividualPos", " ", "=", " ", 
           RowBox[{"ListPos", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "i"}], "]"}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"IndividualNewPos", " ", "=", " ", 
           RowBox[{
            RowBox[{"ListPos", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "i"}], "]"}], "]"}], "+", 
            RowBox[{"\[Delta]t", " ", 
             RowBox[{"ListVel0", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}]}], ";", 
          "\[IndentingNewLine]", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{"SphRad", "<", 
               RowBox[{"IndividualNewPos", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "<", 
               RowBox[{"1", "-", "SphRad"}]}], ")"}]}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"ListVel0", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
              RowBox[{"-", 
               RowBox[{"ListVel0", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", "\t\t", 
             RowBox[{"IndividualNewPos", " ", "=", " ", 
              RowBox[{
               RowBox[{"ListPos", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "i"}], "]"}], "]"}], "+", 
               RowBox[{"\[Delta]t", " ", 
                RowBox[{"ListVel0", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}]}]}], ";"}]}], "\n", "\t", 
           "]"}], ";", "\n", "\t", "\[IndentingNewLine]", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Checking", " ", "if", " ", "position", " ", "is", " ", 
            "outframing", " ", "in", " ", "y", " ", "coordinate"}], " ", 
           "*)"}], "\n", "\t", 
          RowBox[{"IndividualNewPos", " ", "=", " ", 
           RowBox[{
            RowBox[{"ListPos", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "i"}], "]"}], "]"}], "+", 
            RowBox[{"\[Delta]t", " ", 
             RowBox[{"ListVel0", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}]}], ";", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{"SphRad", "<", 
               RowBox[{"IndividualNewPos", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "<", 
               RowBox[{"1", "-", "SphRad"}]}], ")"}]}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"ListVel0", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
              RowBox[{"-", 
               RowBox[{"ListVel0", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", "\t\t", 
             RowBox[{"IndividualNewPos", " ", "=", " ", 
              RowBox[{
               RowBox[{"ListPos", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "i"}], "]"}], "]"}], "+", 
               RowBox[{"\[Delta]t", " ", 
                RowBox[{"ListVel0", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}]}]}], ";"}]}], "\n", "\t\t", 
           "]"}], ";", "\n", "\t", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"Updating", " ", "Position"}], " ", "*)"}], "\t", "\n", 
          "\t", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"NewPosList", ",", "IndividualNewPos"}], "]"}], ";", "\n", 
          "\n", "\t", 
          RowBox[{"(*", 
           RowBox[{
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
           "*****)"}], "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"Checking", " ", "state", " ", "of", " ", "particle"}], 
           " ", "*)"}], "\n", "\t", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ListState", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "i"}], "]"}], "]"}], "===", 
               "Infected"}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ListState", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "i"}], "]"}], "]"}], "===", 
               "Recovered"}], ")"}]}], ",", "\n", "\n", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "In", " ", "the", " ", "case", " ", "where", " ", "the", " ", 
               "individual", " ", "is", " ", "sick", " ", "or", " ", 
               "cured"}], ",", " ", 
              RowBox[{"do", " ", "nothing"}]}], " ", "*)"}], "\n", "\t\t", 
            RowBox[{
             RowBox[{"IndividualState", "=", 
              RowBox[{"ListState", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "i"}], "]"}], "]"}]}], ";"}], "\n", 
            "\t", ",", "\n", "\t\t", "\n", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"Checking", " ", "every", " ", "pair"}], " ", "*)"}], 
            "\n", "\t\t", 
            RowBox[{"Do", "[", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"LoopIndividualState", " ", "=", " ", 
                RowBox[{"ListState", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "j"}], "]"}], "]"}]}], ";", "\n", 
               "\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"LoopIndividualState", "===", "Infected"}], ")"}], 
                 ",", "\n", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"LoopIndividualPos", " ", "=", " ", 
                   RowBox[{"ListPos", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "j"}], "]"}], "]"}]}], ";", "\n",
                   "\t\t\t\t", 
                  RowBox[{"LoopDist", " ", "=", " ", 
                   RowBox[{"Norm", "[", 
                    RowBox[{"RefIndividualPos", "-", "LoopIndividualPos"}], 
                    "]"}]}], ";", "\n", "\t\t\t\t", "\n", "\t\t\t\t", 
                  RowBox[{"(*", " ", 
                   RowBox[{"Another", " ", "infected"}], " ", "*)"}], "\n", 
                  "\t\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Random", "[", "]"}], "<", "InfecProbByContact"}],
                     ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{"LoopDist", "<", 
                    RowBox[{"2", "SphRad"}]}], ")"}]}], ",", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"IndividualState", " ", "=", " ", "Infected"}], 
                    ";", "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Sort", "[", "ListInfectedIndex", "]"}], ",", 
                    "i"}], "]"}]}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"ListNotInfectedIndex", ",", "i"}], "]"}], 
                    ")"}]}], ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"ListNotInfectedIndex", " ", "=", " ", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"ListNotInfectedIndex", ",", "i"}], "]"}]}], ";", 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{"NotInfectedCount", "--"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"ListInfectedIndex", ",", "i"}], "]"}], ";", "\n",
                     "\t\t\t\t\t\t", 
                    RowBox[{"InfectedCount", "++"}], ";"}]}], "\n", 
                    "\t\t\t\t\t", "]"}], ";"}]}], "\n", "\t\t\t\t", "]"}], 
                  ";"}]}], "\n", "\t\t\t", "]"}], ";"}], "\n", "\t\t", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "Qtde"}], "}"}]}], "]"}]}], "\n", 
           "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", "\n", "\t", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"NewStateList", ",", "IndividualState"}], "]"}], ";"}], 
         "\n", "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "Qtde"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"ListPos", ",", "NewPosList"}], "]"}], ";", "\n", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"ListState", ",", "NewStateList"}], "]"}], ";", 
       "\[IndentingNewLine]", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
          "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*****)"}], 
       "\n", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Incrementing", " ", "sick", " ", "count"}], " ", "*)"}], 
       "\n", "\t", 
       RowBox[{"ListSickIndexCpy", " ", "=", " ", "ListInfectedIndex"}], ";", 
       "\n", "\t", 
       RowBox[{"Do", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"InfectionTiming", "[", 
            RowBox[{"[", "index", "]"}], "]"}], " ", "=", " ", 
           RowBox[{
            RowBox[{"InfectionTiming", "[", 
             RowBox[{"[", "index", "]"}], "]"}], "+", "\[Delta]t"}]}], ";", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{"Infected", " ", "Patients"}], " ", "*)"}], "\n", "\t\t", 
          RowBox[{
           RowBox[{"ListState", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "index"}], "]"}], "]"}], " ", "=", " ",
            "Infected"}], ";", "\n", "\t\t", "\n", "\t\t\t\t", "\n", "\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{"Pacient", " ", "Recoverd"}], " ", "*)"}], "\n", "\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Random", "[", "]"}], "<", "ProbSymptomaticCure"}], 
              ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{"(", 
               RowBox[{"!", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"Sort", "[", "ListRecoveredIndex", "]"}], ",", 
                  "index"}], "]"}]}], ")"}], 
              RowBox[{"(*", 
               RowBox[{"&&", 
                RowBox[{"(", 
                 RowBox[{"!", 
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{"Sort", "[", "ListRecoveredIndex", "]"}], ",", 
                    "index"}], "]"}]}], ")"}]}], "*)"}], ")"}]}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{
             RowBox[{"ListInfectedIndex", " ", "=", " ", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{"ListInfectedIndex", ",", "index"}], "]"}]}], ";", 
             "\n", "\t\t\t\t", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"ListRecoveredIndex", ",", "index"}], "]"}], ";", "\n", 
             "\t\t\t\t", 
             RowBox[{"InfectedCount", "--"}], ";", "\n", "\t\t\t\t", 
             RowBox[{"RecoveredCount", "++"}], ";", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"ListState", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "index"}], "]"}], "]"}], " ", "=", 
              " ", "Recovered"}], ";"}]}], "\n", "\t\t\t", "]"}], ";", "\n", 
          "\t\t\t", "\n", "\t\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{"Pacient", " ", "Died"}], "*)"}], "\n", "\t\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Random", "[", "]"}], "<", "ProbSymptomaticDeath"}], 
                ")"}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"!", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Sort", "[", "ListRecoveredIndex", "]"}], ",", 
                    "index"}], "]"}]}], ")"}], "&&", 
                 RowBox[{"(", 
                  RowBox[{"!", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Sort", "[", "ListRecoveredIndex", "]"}], ",", 
                    "index"}], "]"}]}], ")"}]}], ")"}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"InfectionTiming", "[", 
                 RowBox[{"[", "index", "]"}], "]"}], ">", 
                "DaysToSymptomaticDeath"}], ")"}], ")"}]}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{
             RowBox[{"ListInfectedIndex", " ", "=", " ", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{"ListInfectedIndex", ",", "index"}], "]"}]}], ";", 
             "\n", "\t\t\t\t", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"ListDeathsIndex", ",", "index"}], "]"}], ";", "\n", 
             "\t\t\t\t", 
             RowBox[{"InfectedCount", "--"}], ";", "\n", "\t\t\t\t", 
             RowBox[{"DeathsCount", "++"}], ";", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"ListState", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "index"}], "]"}], "]"}], " ", "=", 
              " ", "Dead"}], ";"}]}], "\n", "\t\t\t", "]"}], ";"}], "\n", 
         "\t\t", "\n", "\t\t\t\t\t\t", "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"index", ",", "ListInfectedIndex"}], "}"}]}], "]"}], ";", 
       "\n", "\n", "\t", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"InfectedList", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "InfectedCount"}], "}"}]}], "]"}], ";", "\n", 
       "\t", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"DeathsList", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "DeathsCount"}], "}"}]}], "]"}], ";", "\n", "\t", 
       
       RowBox[{"AppendTo", "[", 
        RowBox[{"RecoveredList", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "RecoveredCount"}], "}"}]}], "]"}], ";", "\n", 
       "\t", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"NotInfectedList", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "NotInfectedCount"}], "}"}]}], "]"}], ";"}], "\n",
       "\t", "\[IndentingNewLine]", "\t", "\n", "\t", "\n", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "FinalTime", ",", "\[Delta]t"}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"100.", 
     RowBox[{"t", "/", "FinalTime"}]}]}], "]"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FinalNotInfectedList", "=", 
   RowBox[{"NotInfectedList", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FinalInfectedList", "=", 
   RowBox[{"InfectedList", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FinalRecoveredList", "=", 
   RowBox[{"RecoveredList", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FinalDeathsList", "=", 
   RowBox[{"DeathsList", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.793906234170334*^9, 3.7939062953636093`*^9}, 
   3.793906389905676*^9, {3.793906461227532*^9, 3.793906474744741*^9}, {
   3.793906541668283*^9, 3.7939065705733757`*^9}, {3.793906687134705*^9, 
   3.7939066898945208`*^9}, {3.793906734400484*^9, 3.793906765450279*^9}, {
   3.7939070492634497`*^9, 3.7939070741056767`*^9}, {3.793907112163937*^9, 
   3.793907249775527*^9}, {3.7939073088912783`*^9, 3.793907462535535*^9}, {
   3.79390751908602*^9, 3.7939075660973587`*^9}, {3.793907630580845*^9, 
   3.793907720656204*^9}, {3.793907810426141*^9, 3.7939078618574677`*^9}, {
   3.793907901114996*^9, 3.793907916127697*^9}, {3.793908022286319*^9, 
   3.793908213066242*^9}, {3.7939082451306458`*^9, 3.793908269784698*^9}, {
   3.79390830188923*^9, 3.793908333345408*^9}, {3.793908431679167*^9, 
   3.793908536805011*^9}, {3.793910349846327*^9, 3.7939103768951797`*^9}, {
   3.7939155022764273`*^9, 3.793915572113597*^9}, {3.793915620684585*^9, 
   3.793915684429042*^9}, {3.7939157226533422`*^9, 3.793915737369842*^9}, {
   3.7939157688201942`*^9, 3.793915769673564*^9}, {3.793916886351413*^9, 
   3.793916956949317*^9}, {3.793916994122712*^9, 3.7939170050405293`*^9}, {
   3.793917040866397*^9, 3.793917070054471*^9}, {3.7939171395743637`*^9, 
   3.793917249672624*^9}, {3.793917310090967*^9, 3.793917417905992*^9}, {
   3.7939174919412737`*^9, 3.793917605880988*^9}, {3.7939176380290728`*^9, 
   3.793917651458315*^9}, 3.793917715079482*^9, {3.793917753498951*^9, 
   3.793917916079708*^9}, {3.793917978259131*^9, 3.7939180556777697`*^9}, {
   3.793918129366757*^9, 3.793918344327795*^9}, {3.7939183856211367`*^9, 
   3.793918386529685*^9}, {3.79391844410605*^9, 3.793918444590394*^9}, {
   3.7939184755304613`*^9, 3.793918478743827*^9}, {3.793918509594973*^9, 
   3.7939186704650717`*^9}, {3.793918985702282*^9, 3.7939191216478443`*^9}, {
   3.793919152146747*^9, 3.793919224246901*^9}, {3.793919258910585*^9, 
   3.793919369670274*^9}, {3.793919417871297*^9, 3.793919434931387*^9}, {
   3.793919474854336*^9, 3.793919475044088*^9}, {3.793919557834548*^9, 
   3.793919576638118*^9}, 3.793919782176546*^9, {3.7939198138873262`*^9, 
   3.793919818981094*^9}, {3.793919882544302*^9, 3.793919935450141*^9}, {
   3.793919986849433*^9, 3.793920280420692*^9}, {3.793920320518422*^9, 
   3.7939204570543737`*^9}, {3.7939206120251617`*^9, 3.793920616072237*^9}, {
   3.793920660971457*^9, 3.7939207075270977`*^9}, {3.793920765802355*^9, 
   3.7939207906116323`*^9}, {3.79392085339433*^9, 3.793920918220499*^9}, {
   3.7939209777674513`*^9, 3.793921078260296*^9}, {3.7939211467408752`*^9, 
   3.793921165745*^9}, {3.7939211963214283`*^9, 3.793921224708301*^9}, {
   3.793921771656955*^9, 3.793921774900161*^9}, {3.7939218919936647`*^9, 
   3.7939218941956882`*^9}, {3.793923181208001*^9, 3.793923466538308*^9}, {
   3.793923500427783*^9, 3.7939235020555687`*^9}, {3.7939235485383987`*^9, 
   3.7939237106644297`*^9}, {3.793923846958355*^9, 3.793923870166806*^9}, {
   3.793923934917633*^9, 3.793923943790472*^9}, {3.7939239805528803`*^9, 
   3.793924064335113*^9}, {3.79392410019495*^9, 3.7939241443436327`*^9}, {
   3.793924237473652*^9, 3.793924273295269*^9}, 3.793924328973452*^9, {
   3.7939244747924843`*^9, 3.793924476043147*^9}, {3.7939261252848597`*^9, 
   3.79392612751752*^9}, {3.793926186062913*^9, 3.793926187568513*^9}, {
   3.793926243809547*^9, 3.793926350565839*^9}, {3.7939264021959743`*^9, 
   3.793926458613456*^9}, {3.7939265106786203`*^9, 3.793926510789157*^9}, {
   3.793926550466078*^9, 3.793926550998086*^9}, {3.79392687997715*^9, 
   3.793926944775711*^9}, {3.793926979520731*^9, 3.793927004689432*^9}, {
   3.793927052059828*^9, 3.793927078062817*^9}, {3.793927222212628*^9, 
   3.7939272226097*^9}, {3.793927742697208*^9, 3.793927752008369*^9}, 
   3.793927789379365*^9, {3.793928889226283*^9, 3.793928912913941*^9}, {
   3.793929066414048*^9, 3.7939290997186937`*^9}, {3.793929172076844*^9, 
   3.793929178074772*^9}, {3.7939294016168327`*^9, 3.793929449204549*^9}, {
   3.793929484181861*^9, 3.79392949262326*^9}, {3.793929570732357*^9, 
   3.793929570857779*^9}, {3.7939296166035633`*^9, 3.793929616831683*^9}, {
   3.793929660883853*^9, 3.7939297015245113`*^9}, {3.793929766466881*^9, 
   3.793929789464056*^9}, {3.793929842916201*^9, 3.793929845026569*^9}, {
   3.793929925745777*^9, 3.793929929316917*^9}, {3.793930018913725*^9, 
   3.7939300194363003`*^9}, {3.793930067114881*^9, 3.7939301145028677`*^9}, {
   3.793930173791683*^9, 3.793930240962153*^9}, {3.793930278730414*^9, 
   3.793930279014421*^9}, {3.7939303450751467`*^9, 3.793930435005698*^9}, {
   3.793930467304562*^9, 3.793930505532733*^9}, {3.793930558540948*^9, 
   3.793930635872961*^9}, {3.7939306880879593`*^9, 3.793930870973687*^9}, 
   3.7939309315059433`*^9, {3.793931044369903*^9, 3.793931045550315*^9}, {
   3.7939310785348454`*^9, 3.7939310787011747`*^9}, {3.793931120098198*^9, 
   3.7939313310385017`*^9}, {3.79393136345082*^9, 3.793931410334785*^9}, {
   3.793931468746214*^9, 3.793931478420052*^9}, {3.793931511703155*^9, 
   3.793931574679483*^9}, {3.7939316111583757`*^9, 3.793931655120294*^9}, {
   3.7939317258687057`*^9, 3.793931729638791*^9}, 3.793931861661182*^9, {
   3.793931927063137*^9, 3.79393192739291*^9}, {3.793932128862615*^9, 
   3.793932142833675*^9}, {3.7939321981036263`*^9, 3.793932205981991*^9}, {
   3.7939322402670116`*^9, 3.793932241575449*^9}, {3.793932347811865*^9, 
   3.793932360775778*^9}, {3.7939324006972313`*^9, 3.793932586526231*^9}, {
   3.793932681024086*^9, 3.793932681291102*^9}, {3.79393458116269*^9, 
   3.793934590808386*^9}, {3.7939346631326723`*^9, 3.7939346937154417`*^9}, {
   3.793934767548468*^9, 3.7939348653743057`*^9}, {3.793934909188511*^9, 
   3.793934909354488*^9}, {3.7939349771123543`*^9, 3.793934997523663*^9}, {
   3.79393504723203*^9, 3.793935060418338*^9}, {3.793935091369252*^9, 
   3.793935195656974*^9}, {3.7939352460867033`*^9, 3.7939353077880173`*^9}, {
   3.7939353519191008`*^9, 3.793935434892556*^9}, {3.793935488625848*^9, 
   3.7939355168315887`*^9}, {3.79393556114703*^9, 3.793935583102105*^9}, {
   3.793935646185727*^9, 3.793935647307126*^9}, {3.793935688790271*^9, 
   3.793935688981927*^9}, {3.7939357225997143`*^9, 3.793935745001883*^9}, {
   3.7939357833997583`*^9, 3.7939357847120943`*^9}, {3.793935869402358*^9, 
   3.7939358714979143`*^9}, {3.7939360032064466`*^9, 
   3.7939360248543873`*^9}, {3.793976509327767*^9, 3.7939765301967077`*^9}, {
   3.794253645435503*^9, 3.7942536474016943`*^9}, {3.794253902098837*^9, 
   3.794253962941553*^9}, {3.7942540634424467`*^9, 3.7942540795736427`*^9}, {
   3.794254110729251*^9, 3.794254171929268*^9}, 3.796392068124049*^9, {
   3.796432576869025*^9, 3.796432577434032*^9}, {3.796432802466557*^9, 
   3.796432802710087*^9}, {3.796434801362933*^9, 3.796434889262638*^9}, {
   3.796434952138999*^9, 3.796434952510849*^9}, {3.796440575464612*^9, 
   3.796440575481145*^9}, {3.796441579322878*^9, 3.796441581353346*^9}, {
   3.796441681003015*^9, 3.796441714660857*^9}, 3.796442598890856*^9, {
   3.7964428076534452`*^9, 3.796442844508333*^9}, {3.79644288554021*^9, 
   3.796442901703083*^9}, {3.796442932398932*^9, 3.796442936097045*^9}, {
   3.796442985961874*^9, 3.796443042631501*^9}, {3.796443485701717*^9, 
   3.796443488859805*^9}, {3.796443564418147*^9, 3.796443616433557*^9}, {
   3.796443646489112*^9, 3.796443666499432*^9}, {3.796443855353115*^9, 
   3.796443937814303*^9}, {3.7964440440723963`*^9, 3.796444046978498*^9}, {
   3.796446575388036*^9, 3.796446582397891*^9}, {3.796446887471098*^9, 
   3.796446890107547*^9}, {3.79644693335315*^9, 3.796446936639579*^9}, {
   3.796606188295632*^9, 3.7966062035057373`*^9}, {3.79660623821551*^9, 
   3.796606248383862*^9}, {3.79660631058633*^9, 3.796606318792782*^9}, {
   3.7966063545874863`*^9, 3.796606357828164*^9}, {3.7966070141715117`*^9, 
   3.796607047372414*^9}, {3.7966071932342997`*^9, 3.79660723506769*^9}, {
   3.79660727142519*^9, 3.796607273384945*^9}, {3.796607304283249*^9, 
   3.796607304981366*^9}, {3.796607557209902*^9, 3.796607561746295*^9}, 
   3.796607654099845*^9, {3.7966078993666353`*^9, 3.796607901455933*^9}, {
   3.7966080254429626`*^9, 3.796608025488717*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"c284dfd7-825c-4195-9a03-66f7b8257056"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsection",
 CellChangeTimes->{{3.796411479717218*^9, 
  3.796411513218605*^9}},ExpressionUUID->"a8dd96e1-31b2-4a4b-aaf3-\
e10367b0d18f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"anim", "=", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\n", 
       RowBox[{
        RowBox[{"{", "\n", "\t", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"NotInfectedList", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "n"}], "]"}], "]"}], ",", 
             RowBox[{"InfectedList", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "n"}], "]"}], "]"}], ",", 
             RowBox[{"RecoveredList", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "n"}], "]"}], "]"}], ",", 
             RowBox[{"DeathsList", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "n"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "Healthy", ",", "Infected", ",", "Recovered", ",", "Black"}], 
             "}"}]}], ",", "\n", "\t", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", "1"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "0.4"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"400", ",", "Automatic"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "FinalTime"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.1"}], "Qtde"}], ",", 
                RowBox[{"1.1", "Qtde"}]}], "}"}]}], "}"}]}], ",", "\n", "\t", 
           
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "\n", "\t", 
           RowBox[{"FrameTicksStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}]}], "}"}]}], 
           ",", "\n", "\t", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", "0"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"400", ",", "Automatic"}], "}"}]}], ",", "\n", "\t", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", "\n", "\t\t", 
             RowBox[{
              RowBox[{"PointLegend", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"{", "\n", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"Directive", "[", 
                   RowBox[{"Healthy", ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], 
                  ",", "\n", "\t\t\t\t", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Infected", ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], 
                  ",", "\n", "\t\t\t\t", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Recovered", ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], 
                  ",", "\n", "\t\t\t\t", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Black", ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}]}], 
                 "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Susceptible\>\"", ",", "\"\<Infected\>\"", ",", 
                  "\"\<Recovered\>\"", ",", "\"\<Dead\>\""}], "}"}], ",", 
                "\n", "\t\t\t\t", 
                RowBox[{"LegendFunction", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Framed", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"RoundingRadius", "\[Rule]", "4"}], ",", 
                    RowBox[{"FrameStyle", "\[Rule]", "None"}], ",", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "0.8"}], "]"}]}]}], 
                    "]"}], "&"}], ")"}]}], ",", "\n", "\t\t\t\t", 
                RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
               "]"}], "\n", "\t\t\t", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.82", ",", "0.97"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.5", ",", "1"}], "}"}]}], "}"}]}], "]"}]}]}], "\n",
           "\t\t", "]"}], "\n", "}"}], ",", 
        RowBox[{"{", "\n", "\t", 
         RowBox[{"Graphics", "[", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ListState", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "i"}], "]"}], "]"}], ",", " ", 
               RowBox[{"Disk", "[", 
                RowBox[{
                 RowBox[{"ListPos", "[", 
                  RowBox[{"[", 
                   RowBox[{"n", ",", "i"}], "]"}], "]"}], ",", "SphRad"}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"ListPos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",",
            "\n", "\t\t", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "\n", "\t\t", 
           RowBox[{"FrameTicksStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}]}], "}"}]}], 
           ",", "\n", "\t\t", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", "1"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"400", ",", "Automatic"}], "}"}]}]}], "\n", "\t", "]"}], 
         " ", "\n", "}"}]}], "\n", "\t", "\n", "}"}], ",", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "122"}]}], "}"}]}]}], "]"}], " ", "\n", ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", 
      RowBox[{"2", "+", 
       RowBox[{"0.99", 
        RowBox[{"FinalTime", "/", "\[Delta]t"}]}]}], ",", "1"}], "}"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{
  3.793916861454751*^9, {3.79391839613664*^9, 3.7939183964061728`*^9}, {
   3.7939184897799892`*^9, 3.793918490038871*^9}, {3.793918647145982*^9, 
   3.7939186761149197`*^9}, {3.79391949002351*^9, 3.793919493660303*^9}, {
   3.793919702281654*^9, 3.793919709922027*^9}, {3.793919742026565*^9, 
   3.793919742343494*^9}, {3.793919916875622*^9, 3.7939199394854603`*^9}, {
   3.793921128839899*^9, 3.793921135303403*^9}, {3.793921204622122*^9, 
   3.793921204861388*^9}, {3.7939217831369743`*^9, 3.7939217844009333`*^9}, {
   3.7939344858996267`*^9, 3.793934537401919*^9}, {3.793934930003516*^9, 
   3.793934930841824*^9}, 3.7939377170885153`*^9, {3.793937775010831*^9, 
   3.793937777229965*^9}, {3.79393785517488*^9, 3.793937859931685*^9}, {
   3.793937912529429*^9, 3.793937997634366*^9}, {3.7939382020747128`*^9, 
   3.793938241588407*^9}, 3.793938441265106*^9, {3.7939386583434057`*^9, 
   3.793938806834454*^9}, {3.793938849747161*^9, 3.793938916664508*^9}, {
   3.793939035933004*^9, 3.793939107090386*^9}, {3.793939200505599*^9, 
   3.793939205515748*^9}, {3.793939325702202*^9, 3.793939336651578*^9}, {
   3.793939420872158*^9, 3.793939456108182*^9}, {3.793939531375383*^9, 
   3.793939625842815*^9}, {3.793939670172624*^9, 3.7939396928872137`*^9}, {
   3.793939868972013*^9, 3.793939871408989*^9}, {3.793940104321053*^9, 
   3.793940127987194*^9}, {3.7939402098449583`*^9, 3.793940227421523*^9}, 
   3.793940746278821*^9, {3.793941455734151*^9, 3.793941478072316*^9}, {
   3.7942543360547943`*^9, 3.7942543415984087`*^9}, {3.796396464769945*^9, 
   3.796396465064479*^9}, {3.796397220568722*^9, 3.796397223792507*^9}, {
   3.796411517182691*^9, 3.7964115855795918`*^9}, {3.7964124014649897`*^9, 
   3.796412403740081*^9}, {3.796412496271274*^9, 3.796412496503776*^9}, {
   3.796413046098674*^9, 3.796413047392108*^9}, 3.79641308256855*^9, {
   3.796413125998623*^9, 3.796413207987138*^9}, 3.796440484051004*^9, {
   3.796440575484426*^9, 3.79644057548728*^9}, {3.7964415886139727`*^9, 
   3.796441596397079*^9}, {3.796441759989987*^9, 3.796441769381744*^9}, {
   3.796441831088253*^9, 3.796441846737178*^9}, 3.7964430511781607`*^9, {
   3.796443162952167*^9, 3.796443182455484*^9}, {3.796606326633049*^9, 
   3.796606327763895*^9}, {3.796607308047496*^9, 3.796607309746832*^9}, {
   3.796757104859432*^9, 3.796757283068192*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"c6b0da63-3f57-451e-a447-df63fa2e39c5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 868, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 992., 1}}, Typeset`size$$ = {
    412., {281., 287.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$2539$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$2539$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> GraphicsGrid[{{
          ListPlot[{
            Part[$CellContext`NotInfectedList, 
             Span[1, $CellContext`n$$]], 
            Part[$CellContext`InfectedList, 
             Span[1, $CellContext`n$$]], 
            Part[$CellContext`RecoveredList, 
             Span[1, $CellContext`n$$]], 
            Part[$CellContext`DeathsList, 
             Span[1, $CellContext`n$$]]}, 
           PlotStyle -> {$CellContext`Healthy, $CellContext`Infected, \
$CellContext`Recovered, Black}, Frame -> True, ImagePadding -> 1, AspectRatio -> 
           0.4, ImageSize -> {400, Automatic}, 
           PlotRange -> {{
             0, $CellContext`FinalTime}, {(-0.1) $CellContext`Qtde, 
              1.1 $CellContext`Qtde}}, Frame -> True, 
           PlotRange -> {{0, 1}, {0, 1}}, FrameTicksStyle -> {
             RGBColor[0, 0, 0, 0], 
             RGBColor[0, 0, 0, 0]}, FrameStyle -> Directive[Black, 
             AbsoluteThickness[2]], ImagePadding -> 0, 
           ImageSize -> {400, Automatic}, PlotLegends -> Placed[
             PointLegend[{
               Directive[$CellContext`Healthy, 
                AbsolutePointSize[6]], 
               Directive[$CellContext`Infected, 
                AbsolutePointSize[6]], 
               Directive[$CellContext`Recovered, 
                AbsolutePointSize[6]], 
               Directive[Black, 
                AbsolutePointSize[6]]}, {
              "Susceptible", "Infected", "Recovered", "Dead"}, 
              LegendFunction -> (
               Framed[#, RoundingRadius -> 4, FrameStyle -> None, Background -> 
                RGBColor[1, 1, 1, 0.8]]& ), LegendLayout -> "Column"], {{0.82,
               0.97}, {0.5, 1}}]]}, {
          Graphics[
           Table[{
             Part[$CellContext`ListState, $CellContext`n$$, $CellContext`i], 
             Disk[
              
              Part[$CellContext`ListPos, $CellContext`n$$, $CellContext`i], \
$CellContext`SphRad]}, {$CellContext`i, 1, 
             Length[
              Part[$CellContext`ListPos, $CellContext`n$$]]}], Frame -> True, 
           PlotRange -> {{0, 1}, {0, 1}}, FrameTicksStyle -> {
             RGBColor[0, 0, 0, 0], 
             RGBColor[0, 0, 0, 0]}, FrameStyle -> Directive[Black, 
             AbsoluteThickness[2]], ImagePadding -> 1, 
           ImageSize -> {400, Automatic}]}}, Spacings -> {0, -122}], 
      "Specifications" :> {{$CellContext`n$$, 1, 992., 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{459., {325., 332.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.796441773901531*^9, {3.796441838489925*^9, 3.796441847179613*^9}, 
   3.7964431444019327`*^9, 3.7964431835314713`*^9, 3.7964432334987307`*^9, 
   3.79644340710671*^9, 3.796443506489188*^9, 3.796443573854775*^9, 
   3.796443702093296*^9, 3.7964438138661137`*^9, {3.796443983069541*^9, 
   3.796443992118639*^9}, 3.796444080376549*^9, 3.796444139087472*^9, 
   3.7964442048938932`*^9, 3.796446140379039*^9, 3.796606069486247*^9, {
   3.796606256941893*^9, 3.796606278058137*^9}, 3.796606328098428*^9, 
   3.796606395757185*^9, 3.796606947104081*^9, 3.796607158944582*^9, 
   3.796607257425983*^9, 3.796607705869256*^9, 3.79660774740455*^9, 
   3.79660794055224*^9, 3.796608041496646*^9, 3.7966081000711737`*^9, 
   3.796610878188181*^9, 3.796625500874308*^9, 3.796752926661901*^9, 
   3.79678793114015*^9, 3.800919286523177*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"62bed2bd-f3e7-4281-a697-e91c2545c5c7"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.796446240521648*^9},ExpressionUUID->"ce3bb138-cfe1-4b59-a26a-\
16c7c3426786"]
}, Open  ]],

Cell[CellGroupData[{

Cell["High Definition Video Export", "Subsection",
 CellChangeTimes->{{3.796412171004737*^9, 
  3.796412181938608*^9}},ExpressionUUID->"e6679884-33f3-48fa-8a9c-\
66b113bc8241"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"FrameQtt", "=", 
   RowBox[{"1", "+", 
    RowBox[{"FinalTime", "/", "\[Delta]t"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Step", " ", "=", " ", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FramesPerSecond", " ", "=", " ", "25"}], ";"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"GraphicsList", " ", "=", " ", 
      RowBox[{"Table", "[", "\n", "\n", "\n", 
       RowBox[{
        RowBox[{"GraphicsGrid", "[", 
         RowBox[{
          RowBox[{"{", "\n", "\n", 
           RowBox[{
            RowBox[{"{", "\n", 
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"NotInfectedList", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", "n"}], "]"}], "]"}], ",", 
                 RowBox[{"InfectedList", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", "n"}], "]"}], "]"}], ",", 
                 RowBox[{"RecoveredList", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", "n"}], "]"}], "]"}], ",", 
                 RowBox[{"DeathsList", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", "n"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "Healthy", ",", "Infected", ",", "Recovered", ",", "Black"}],
                  "}"}]}], ",", "\n", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "1"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "0.4"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"400", ",", "Automatic"}], "}"}]}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "FinalTime"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1"}], "Qtde"}], ",", 
                    RowBox[{"1.1", "Qtde"}]}], "}"}]}], "}"}]}], ",", "\n", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "\n", 
               RowBox[{"FrameTicksStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], ",", 
                  RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}]}], 
                 "}"}]}], ",", "\n", 
               RowBox[{"FrameStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Black", ",", 
                  RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
               ",", 
               RowBox[{"ImagePadding", "\[Rule]", "0"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"400", ",", "Automatic"}], "}"}]}], ",", "\n", 
               RowBox[{"PlotLegends", "\[Rule]", 
                RowBox[{"Placed", "[", 
                 RowBox[{
                  RowBox[{"PointLegend", "[", 
                   RowBox[{
                    RowBox[{"{", "\n", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"Healthy", ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], 
                    ",", "\n", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Infected", ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], 
                    ",", "\n", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Recovered", ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], 
                    ",", "\n", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Black", ",", 
                    RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}]}], 
                    "}"}], ",", "\n", "\n", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Susceptible\>\"", ",", "\"\<Infected\>\"", ",", 
                    "\"\<Recovered\>\"", ",", "\"\<Dead\>\""}], "}"}], ",", 
                    "\n", 
                    RowBox[{"LegendFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Framed", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"RoundingRadius", "\[Rule]", "4"}], ",", 
                    RowBox[{"FrameStyle", "\[Rule]", "None"}], ",", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "0.8"}], "]"}]}]}], 
                    "]"}], "&"}], ")"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
                   "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.82", ",", "0.97"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "1"}], "}"}]}], "}"}]}], "]"}]}]}], 
              "\n", "]"}], "\n", "}"}], ",", "\n", "\n", 
            RowBox[{"{", "\n", 
             RowBox[{
             "Graphics", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Red", ",", " ", 
                   RowBox[{"Disk", "[", 
                    RowBox[{"#", ",", "SphRad"}], "]"}]}], "}"}], "&"}], "/@", 
                RowBox[{"ListPos", "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ListState", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "i"}], "]"}], "]"}], ",", " ", 
                   RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"ListPos", "[", 
                    RowBox[{"[", 
                    RowBox[{"n", ",", "i"}], "]"}], "]"}], ",", "SphRad"}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"Length", "[", 
                    RowBox[{"ListPos", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
               ",", "\n", "\n", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", "\n", 
               RowBox[{"FrameTicksStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], ",", 
                  RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}]}], 
                 "}"}]}], ",", "\n", 
               RowBox[{"FrameStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Black", ",", 
                  RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
               ",", 
               RowBox[{"ImagePadding", "\[Rule]", "1"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"400", ",", "Automatic"}], "}"}]}]}], "\n", "]"}], 
             " ", "\n", "}"}]}], "\n", "\n", "}"}], ",", 
          RowBox[{"Spacings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "122"}]}], "}"}]}]}], "]"}], " ", "\n", "\n", "\n", 
        "\n", ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "FrameQtt", ",", "Step"}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<%: \>\"", ",", 
        RowBox[{"100.", 
         RowBox[{"n", "/", "FrameQtt"}]}]}], "}"}], "]"}]}], "]"}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<Disease-Propagation-Simulation.avi\>\"", ",", "GraphicsList", ",", 
     RowBox[{"FrameRate", "\[Rule]", "FramesPerSecond"}]}], "]"}], 
   "*)"}]}], "\n", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Disease-Propagation-Simulation.gif\>\"", ",", "GraphicsList", ",", 
   RowBox[{"FrameRate", "\[Rule]", "FramesPerSecond"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.796396984231242*^9, 3.796397004236946*^9}, {
   3.796398003465528*^9, 3.796398004356738*^9}, {3.796398284762436*^9, 
   3.796398440306259*^9}, {3.796398522359796*^9, 3.796398543775433*^9}, 
   3.796398610766602*^9, {3.7963989301625013`*^9, 3.7963989564104433`*^9}, {
   3.79639903238383*^9, 3.796399042232645*^9}, {3.796399161782482*^9, 
   3.79639916209619*^9}, {3.796399409539473*^9, 3.796399409956873*^9}, {
   3.796399989538727*^9, 3.796399989755434*^9}, {3.796409877835312*^9, 
   3.7964098781861486`*^9}, {3.796412279801607*^9, 3.796412280168599*^9}, {
   3.7964125272868834`*^9, 3.796412529877637*^9}, {3.796413570881241*^9, 
   3.796413575305111*^9}, 3.7964404841086473`*^9, {3.796440578790791*^9, 
   3.796440578794763*^9}, 3.7964416005653553`*^9, 3.7964416362774267`*^9, {
   3.796444226220365*^9, 3.79644428648319*^9}, 3.796444321109178*^9, {
   3.79660731226786*^9, 3.796607313936513*^9}, {3.796608202139139*^9, 
   3.7966082088993998`*^9}, {3.796608397774564*^9, 3.796608497433969*^9}, {
   3.7966085624588223`*^9, 3.796608562858223*^9}, 3.796608645477833*^9, {
   3.79661333692136*^9, 3.796613389561685*^9}, {3.800923210212163*^9, 
   3.8009232128625193`*^9}},ExpressionUUID->"281d3637-e940-44b2-a538-\
3bb0c64e9944"],

Cell[BoxData["\<\"Disease-Propagation-Simulation.avi\"\>"], "Output",
 CellChangeTimes->{3.796611076022822*^9, 3.796613511842526*^9, 
  3.800919416369944*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"dd16b3e0-4d83-4cc8-af3b-ef8c25e4c51b"],

Cell[BoxData["\<\"Disease-Propagation-Simulation.gif\"\>"], "Output",
 CellChangeTimes->{3.796611076022822*^9, 3.796613511842526*^9, 
  3.800919503755685*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"6a319a3b-4c15-4f04-add4-d7394d28cace"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<Disease-Propagation-Simulation.gif\>\"", ",", "GraphicsList", ",", 
    RowBox[{"FrameRate", "\[Rule]", "FramesPerSecond"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7966081528026*^9, 3.79660818988874*^9}, {
   3.7966082394834757`*^9, 3.7966082459040833`*^9}, {3.7966083930369587`*^9, 
   3.7966083943438797`*^9}, {3.796611180622965*^9, 3.7966111833486834`*^9}, {
   3.800923217095211*^9, 3.800923223060417*^9}, {3.80092325414633*^9, 
   3.800923264375436*^9}, 
   3.800923309934791*^9},ExpressionUUID->"f4c6ee3d-ac46-41f3-b5a3-\
4b2e5fc28687"],

Cell[BoxData[
 TemplateBox[{
  "Export","infer",
   "\"Cannot infer format of file \\!\\(\\*RowBox[{\\\"\\\\\\\"MyAutorun3.mp4\
\\\\\\\"\\\"}]\\).\"",2,77,2,25348497620153884783,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.800923224135275*^9, 3.8009232562701607`*^9},
 CellLabel->
  "During evaluation of \
In[77]:=",ExpressionUUID->"6285350f-e101-48d9-83b7-9c64100db17b"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.796611312071575*^9, 3.800923224136875*^9, 
  3.800923256279191*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"98e7a49c-76de-4618-a7a3-4b6703da06a8"]
}, Open  ]],

Cell[BoxData["Export"], "Input",
 CellChangeTimes->{{3.7966082132817574`*^9, 
  3.79660821445599*^9}},ExpressionUUID->"e7b3e15d-6adc-40d0-b542-\
ee34b558e2d0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compatibility of the simulation with the SIRD model", "Section",
 CellChangeTimes->{{3.796412171004737*^9, 3.796412181938608*^9}, {
  3.7964324117837057`*^9, 3.7964324142870083`*^9}, {3.79643703424481*^9, 
  3.796437036846055*^9}, {3.796612089551166*^9, 3.796612093401582*^9}, {
  3.796757325255227*^9, 
  3.7967573329034243`*^9}},ExpressionUUID->"10ab7b92-607b-4101-875c-\
0b74d9b0c0cd"],

Cell["\<\
From the simulation results, it can be seen that the curves present the \
typical pattern of evolution of SIRD. The differential equations of this \
model describe the dynamics of four functions that account, respectively, for \
the number of individuals susceptible to contagion (S), infected (I), \
recovered (R) and killed (D)  (arXiv:2003.06031):\
\>", "Text",
 CellChangeTimes->{{3.796610319407979*^9, 3.796610332156982*^9}, {
  3.7966104193172703`*^9, 3.7966104531575727`*^9}, {3.7966107238188877`*^9, 
  3.796610757945682*^9}, {3.796611406538733*^9, 3.79661143004354*^9}, {
  3.796611511352062*^9, 
  3.796611545020988*^9}},ExpressionUUID->"b318f2d8-cdcb-47f4-8b71-\
4e4e652de6ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   FractionBox["dS", "dt"], "=", 
   RowBox[{
    RowBox[{"-", "\[Beta]"}], " ", "S", " ", "I"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["dI", "dt"], "=", 
  RowBox[{
   RowBox[{"\[Beta]", " ", "S", " ", "I"}], " ", "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Gamma]", "+", "\[Alpha]"}], ")"}], 
    "I"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["dR", "dt"], "=", 
   RowBox[{"\[Gamma]", " ", "I"}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["dD", "dt"], "=", 
   RowBox[{"\[Alpha]", " ", "I"}]}], 
  " "}], "\[IndentingNewLine]"}], "DisplayFormula",
 CellChangeTimes->{{3.796611283674121*^9, 3.7966113148992443`*^9}, {
  3.796611391024653*^9, 3.796611392043708*^9}, {3.796611549043673*^9, 
  3.796611611819784*^9}},
 TextAlignment->Center,ExpressionUUID->"f87d0c0b-31ef-4e97-8f64-aa328dfcdd73"],

Cell[TextData[{
 "Note that the sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["S", "0"], " ", "=", " ", 
    RowBox[{"S", "+", "I", "+", "R", "+", "D"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "96961d0b-b925-48e8-9c99-c1362ed0ff52"],
 "  is always constant and together with {\[Alpha],\[Beta],\[Gamma]}, \
composes the set of parameters of the model. The initial time is defined as \
the time when the first infection occurs.  In this way, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"I", "(", "0", ")"}], " ", "=", " ", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "111917d6-001d-426c-9ee3-6bc9b735a0df"],
 " , ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"R", "(", "0", ")"}], " ", "=", " ", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ae1725c0-fc8d-4c4e-b79d-be543645f1ca"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"D", "(", "0", ")"}], " ", "=", " ", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e28e5ce1-20a8-40c7-ac85-b0112d4af8e0"],
 " .  Moreover, it is assumed for simplicity that only contagion causes \
fatalities."
}], "Text",
 CellChangeTimes->{{3.796610319407979*^9, 3.796610332156982*^9}, {
  3.7966104193172703`*^9, 3.7966104531575727`*^9}, {3.7966107238188877`*^9, 
  3.796610757945682*^9}, {3.796611406538733*^9, 3.79661143004354*^9}, {
  3.796611511352062*^9, 3.796611545020988*^9}, {3.796611683794197*^9, 
  3.796611783703546*^9}, {3.796611851906516*^9, 3.79661197587735*^9}, {
  3.796612053116584*^9, 3.796612057424633*^9}, {3.79661215637543*^9, 
  3.796612163443831*^9}},ExpressionUUID->"b739c037-5a95-4621-91da-\
7c7121ff4c1c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FinalNotInfectedList", "=", 
   RowBox[{"NotInfectedList", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FinalInfectedList", "=", 
   RowBox[{"InfectedList", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FinalRecoveredList", "=", 
   RowBox[{"RecoveredList", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FinalDeathsList", "=", 
   RowBox[{"DeathsList", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.796432464078649*^9, 3.796432542505851*^9}, {
  3.796444503172624*^9, 3.7964445298545227`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"54a557c6-cd75-4c75-bb8b-b9eb99b2f621"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.796612281346932*^9, 
  3.796612285441923*^9}},ExpressionUUID->"f0495820-440a-49d2-ab5e-\
46945e7177a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fn", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"k", "[", 
   RowBox[{"x", ",", 
    RowBox[{"OptionValue", "[", "opt2", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7966181103954687`*^9, 
  3.7966181103975067`*^9}},ExpressionUUID->"0edc76ac-160d-4764-ab5b-\
a6c6c5f90538"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"SIRDModelSolve", ",", "SIRDModelChiSqrd"}], "]"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Numerical", " ", "solve", " ", "of", " ", "SIRD", " ", "Model"}], 
   " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SIRDModelSolve", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"I0", " ", "\[Rule]", " ", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SIRDModelSolve", "[", 
     RowBox[{"tfim_", ",", 
      RowBox[{"{", 
       RowBox[{"S0_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "\[Gamma]_"}], 
       "}"}], ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"s", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", 
            RowBox[{"s", "[", "t", "]"}], " ", 
            RowBox[{"i", "[", "t", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"s", "[", "0", "]"}], "\[Equal]", "S0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"i", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"\[Beta]", " ", 
             RowBox[{"s", "[", "t", "]"}], " ", 
             RowBox[{"i", "[", "t", "]"}]}], "-", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"i", "[", "t", "]"}]}], "-", 
            RowBox[{"\[Alpha]", " ", 
             RowBox[{"i", "[", "t", "]"}]}]}]}], ",", 
          RowBox[{
           RowBox[{"i", "[", "0", "]"}], "\[Equal]", 
           RowBox[{"OptionValue", "[", "I0", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"i", "[", "t", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"r", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"d", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{"\[Alpha]", " ", 
            RowBox[{"i", "[", "t", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"d", "[", "0", "]"}], "\[Equal]", "0"}]}], 
         "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "i", ",", "r", ",", "d"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tfim"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SIRDModelChiSqrd", "[", 
     RowBox[{"tfim_", ",", 
      RowBox[{"{", 
       RowBox[{"S0_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "\[Gamma]_"}], 
       "}"}]}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[DoubleStruckS]", ",", "\[DoubleStruckI]", ",", "\[DoubleStruckR]", 
        ",", "\[DoubleStruckD]", ",", "\[Chi]2"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\[DoubleStruckS]", ",", "\[DoubleStruckI]", ",", "\[DoubleStruckR]",
           ",", "\[DoubleStruckD]"}], "}"}], " ", "=", " ", 
        RowBox[{"SIRDModelSolve", "[", 
         RowBox[{"tfim", ",", 
          RowBox[{"{", 
           RowBox[{"S0", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Chi]2", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Chi]2", "+=", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[DoubleStruckS]", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "2"], "&"}], "/@", 
          "FinalNotInfectedList"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Chi]2", "+=", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[DoubleStruckI]", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "2"], "&"}], "/@", 
          "FinalInfectedList"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Chi]2", "+=", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[DoubleStruckR]", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "2"], "&"}], "/@", 
          "FinalRecoveredList"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Chi]2", "+=", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[DoubleStruckD]", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "2"], "&"}], "/@", 
          "FinalDeathsList"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[Chi]2"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.796435142793687*^9, 3.796435318926353*^9}, {
   3.79643536422117*^9, 3.796435408194624*^9}, {3.79643550180595*^9, 
   3.796435538571307*^9}, {3.7964361288066673`*^9, 3.7964361465306597`*^9}, {
   3.796436676885747*^9, 3.796436680608029*^9}, {3.7964377381634893`*^9, 
   3.796437771169098*^9}, {3.796437881192169*^9, 3.7964379006143637`*^9}, {
   3.796439373369952*^9, 3.796439377985333*^9}, 3.7964445305631733`*^9, {
   3.796612180136904*^9, 3.7966122224906607`*^9}, {3.796612286787613*^9, 
   3.7966123014248123`*^9}, 3.7966128997762136`*^9, {3.796612947835499*^9, 
   3.796612952316039*^9}, {3.796618072920779*^9, 3.796618103459589*^9}, {
   3.796618143493587*^9, 3.796618167401627*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"e1c8e9eb-02ce-4249-8860-a677731af3ac"],

Cell[TextData[{
 "First of all, we have to find some rough estimate for parameters and its \
confidence interval. There is no methodology for this. Just testing. We`re \
gonna fix the parameter  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e433f800-72d1-4e50-8285-ee5da072dbcb"],
 " since we do know the population size in the simulation."
}], "Text",
 CellChangeTimes->{{3.796612372650465*^9, 3.7966124562916813`*^9}, {
  3.796612596351211*^9, 3.7966126345474033`*^9}, {3.7966126667428217`*^9, 
  3.7966126702041407`*^9}},ExpressionUUID->"661d3efe-5771-46dc-873d-\
9809c2feefc7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RoughEstimate", " ", "=", 
   RowBox[{"{", 
    RowBox[{"200", ",", "0.006", ",", "0.0026", ",", "0.055"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[DoubleStruckS]", ",", "\[DoubleStruckI]", ",", "\[DoubleStruckR]", 
      ",", "\[DoubleStruckD]"}], "}"}], " ", "=", " ", 
    RowBox[{"SIRDModelSolve", "[", 
     RowBox[{"FinalTime", ",", "RoughEstimate"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "FinalNotInfectedList", ",", "FinalRecoveredList", ",", 
       "FinalInfectedList", ",", "FinalDeathsList"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "FinalTime"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "250"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.2", ",", "0", ",", "0.3"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.0", ",", "0.5", ",", "0.3"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.99", ",", "0.0", ",", "0.0", ",", "0.3"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.5", ",", "0.5", ",", "0.5", ",", "0.3"}], "]"}]}], 
       "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[DoubleStruckS]", "[", "t", "]"}], ",", 
       RowBox[{"\[DoubleStruckR]", "[", "t", "]"}], ",", 
       RowBox[{"\[DoubleStruckI]", "[", "t", "]"}], ",", 
       RowBox[{"\[DoubleStruckD]", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "FinalTime"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.5", ",", "0"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.0", ",", "0.6"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.99", ",", "0.0", ",", "0.0"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.0", ",", "0.0", ",", "0.0"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.796444593332341*^9, 3.796444665595138*^9}, {
  3.796444802501154*^9, 3.796444806644021*^9}, {3.79661001846686*^9, 
  3.7966101381666803`*^9}, {3.7966101728298683`*^9, 3.796610192904132*^9}, {
  3.796612231789647*^9, 3.796612253595508*^9}, {3.7966123193666887`*^9, 
  3.796612356430292*^9}, {3.796612485448895*^9, 3.796612511044641*^9}, {
  3.796612558751505*^9, 3.796612559745502*^9}, {3.796618180680814*^9, 
  3.796618190132987*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"fbf5aa7a-41a0-4c15-93d1-82ff43fcf763"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0, 0.2, 0], PointSize[0.003666666666666667], AbsoluteThickness[
      1.6], Opacity[0.3], PointBox[CompressedData["
1:eJxd2ztsJWcZh/EhAXM7QGADJBDACcGEYC7B4WJumUDWCWTIzUnYQZvkZC+z
FJYopnI3lavpXA2Vq1O5m8rdVJaQhsrVdJaQRorkAjQIYYEQ3vm/37ya52tG
T845P79+9e3Gm8vjt/70xt0Hoij64MEouv+cnfM/xn+u7p+T5+b9l6mf3bp/
zvB6N7VBeP/fpr6X3T89Pv/B1H9t758LeH/H+/8Bf8Dn/4mv9y94/1Y3wbuc
Wt5/ppb336nl/W9q21w8f7+3/A/F888/oD4KX+/BqcV9WM8ieNbL4H1EHQdv
Tb0evI+aE7yPTS3PW97H1ef3zPvE1PI+ObU+t5hanvXRPfM+NbW8T08t7zP2
/QTvoan1fus4+N7jx7c+a99v+HrWUfA+N7U86/PMPOsis3muTS3POs7MeXhq
ed7yvOV93uYLnnUUvC9MLc+6uWuet7wvTi3P+uiuOY/Y/HfN85ZnHQfvUZsv
eNZR8L5k+7pjnnVzxzzr4o55X1Yv75hnvX7HvMfs87fNs17eNs86vm3eV6aW
Z93cMu+rU8uzXt4yzzq+Zd7X7HO3zLMu3re/vm7zvm/3y7pZmh9eX9rnreP3
7OtZR+/Z83H7/LvmWRfvmhdef8c8b3nW0Tv2fMJev2medXHTPOvopnnh9T+Y
Zx2n9r6vm3fD9mNd3DDPOr5hnnV0w7zQv7fnk/Z827zQb5kX+k3zQu+aF/oN
e37Dnq+bZx2/Zl54/VXzQr9iXujf2XPDnol5oV82L/RL5lkXL5oXesfe903r
6+ZZR9fNC6+/YF54/QXzvPV8yp6/Ms+6eN680LF53vK85XzLnrF53vJCP2de
6F+aF/oX9nzanj83z1te6J+Y5y0v9I/s+e2p5YV+1jxveaG3zPPWc3Nqed7y
Qv/AvNDPmBf6+/b8jj2/a17oTfO85YV+2jzv4Oj5lHmhnzTPW17oJ8zz1vN7
9nzMPG95oR8xz1ue9/z7fljvf9Rbv9+EfkifT7z19ULbzxWFt76+98jVoSOb
x3v0em89npla83lrPm/N5635vDUfvApeDa+F18O7ulfz+bw1n7fmmzrSfN6a
z1vzeWs+b80Hr4c3/Tox71Fv3R9vzeet+bw1H7wKXg2vhdfDu/p1Pp/PW/N5
az5vzeet+eBV8Gp4LbweXvRDzOet+bw1n7fm89Z88Cp4NbwWXg9v+n01zOet
+bw1n7fm89Z88Cp4NbwWXg8v+jHm89Z83prPW/N5az54FbwaXguvh3f196n5
fN6az1vzeWs+b80Hr4JXw2vh9fCibcznrfm8NZ+35vPWfPAqeDW8Fl4PL/op
5vPWfN6az1vzeWs+eBW8Gl4Lr4cX/QzzeWs+b83nrfm8NR+8Cl4Nr4XXw7v6
OWo+n7fm89Z83prPW/PBq+DV8Fp4Pbzp58Awn7fm89Z83prPW/PBq+DV8Fp4
Pbyrn1vn83lrPm/N5635vDUfvApeDa+F18O7+jl7Pp+35vPWfN6az1vzwavg
1fBaeD28KJ6/f+Gteb3v6Y9LU9uPD3MvhpfAS+Fl8HJ4BbwSXgVvBa+G18Br
4XXwengDvOj5ubfw1v68tT9v7c97PDG8BF4KL4OXwyvglfAqeCt4NbwGXguv
g9fDG+Bd/bl35i28tT9v7c9b+/MeTwwvgZfCy+Dl8Ap4JbwK3gpeDa+B18Lr
4PXwBnjRr+fewlv789b+vPX7j/d4YngJvBReBi+HV8Ar4VXwVvBqeA28Fl4H
r4c3wJv+OUzYn7f25639eWt/3uOJ4SXwUngZvBxeAa+EV8FbwavhNfBaeB28
Ht4AL7o+9xbe2p+39uet/XmPJ4aXwEvhZfByeAW8El4FbwWvhtfAa+F18Hp4
A7xoZ2rtz1v789b+vLU/7/HE8BJ4KbwMXg6vgFfCq+Ct4NXwGngtvA5eD2+A
F7049xbe2p+39uet/XmPJ4aXwEvhZfByeAW8El4FbwWvhtfAa+F18Hp4A7zo
pbm38Nb+vLU/b+3PezwxvAReCi+Dl8Mr4JXwKngreDW8Bl4Lr4PXwxvgRb+Z
ewtv7c9b+/PW/rzHE8NL4KXwMng5vAJeCa+Ct4JXw2vgtfA6eD28AV7027m3
8Nb+vLU/b+3PezwxvAReCi+Dl8Mr4JXwKngreDW8Bl4Lr4PXwxvgRS/PvYW3
9uet/Xlrf97jieEl8FJ4GbwcXgGvhFfBW8Gr4TXwWngdvB7eAC9K5t7CW/vz
1v68tT/v8cTwEngpvAxeDq+AV8Kr4K3g1fAaeC28Dl4Pb4A3/XvWsD9v7c9b
+/PW/rzHE8NL4KXwMng5vAJeCa+Ct4JXw2vgtfA6eD28AV70ytxbeGt/3tqf
t/bnPZ4YXgIvhZfBy+EV8Ep4FbwVvBpeA6+F18Hr4Q3wolfn3sJb+/PW/ry1
P+/xxPASeCm8DF4Or4BXwqvgreDV8Bp4LbwOXg9vgBe9Nn//mrf26T2u65q3
9us9nnV4G/A24W3B24YXw9uBl8DbhZfCW8LL4O3By+HtwyvgHcAr4R3Cq+Ad
wVvBO4ZXwzuB18A7hdfCO4PXwTuH18O7gDfAu4QXvT731rx1/7x1/7x1/7zH
sw5vA94mvC142/BieDvwEni78FJ4S3gZvD14Obx9eAW8A3glvEN4FbwjeCt4
x/BqeCfwGnin8Fp4Z/A6eOfwengX8AZ4l/Cm/+4s3D9v3T9v3T9v3T/v8azD
24C3CW8L3ja8GN4OvATeLrwU3hJeBm8PXg5vH14B7wBeCe8QXgXvCN4K3jG8
Gt4JvAbeKbwW3hm8Dt45vB7eBbwB3iW8aHfurXnr/nnr/nnr/nmPZx3eBrxN
b/38A28bXgxvB14CbxdeCm8JL4O3By+Htw+vgHcAr4R3CK+CdwRvBe8YXg3v
BF4D7xReC+8MXgfvHF4P7wLeAO8SXvTm3Fvz1v3zHr1r3rp/3uNZh7cBbxPe
FrxteDG8HXgJvF14KbwlvAzeHrwc3j68At4BvBLeIbwK3hG8FbxjeDW8E3gN
vFN4LbwzeB28c3g9vAt4A7xLeNFbc2/NW/fPW/fPW/fPezzr8DbgbcLbgrcN
L4a3Ay+BtwsvhbeEl8Hbg5fD24dXwDuAV8I7hFfBO4K3gncMr4Z3Aq+Bdwqv
hXcGr4N3Dq+HdwFvgHcJL3p77q156/556/556/55j2cd3ga8TXhb8LbhxfB2
4CXwduGl8JbwMnh78HJ4+/AKeAfwSniH8Cp4R/BW8I7h1fBO4DXwTuG18M7g
dfDO4fXwLuAN8C7hTf8fTbh/3rp/3rp/3rp/3uNZh7cBbxPeFrxteDG8HXgJ
vF14KbwlvAzeHrwc3j68At4BvBLeIbwK3hG8FbxjeDW8E3gNvFN4LbwzeB28
c3g9vAt4A7xLeNGNubfmrfvnrfvnrfvnPZ51eBvwNuFtwduGF8PbgZfA24WX
wlvCy+Dtwcvh7cMr4B3AK+EdwqvgHcFbwTuGV8M7gdfAO4XXwjuD18E7h9fD
u4A3wLuEF6VT/x9caEPS
       "]]}, 
     {RGBColor[0, 0., 0.5], PointSize[0.003666666666666667], 
      AbsoluteThickness[1.6], Opacity[0.3], PointBox[CompressedData["
1:eJxd2j1sW9cZxvHbpnW/2Dat0iRMk1aJU7ZN1fSDSRqlaXyT2HJi03YsyrKZ
TyVp2EVAB07a7uSJmyd20qRJGydtnAQUYCdN3AQUIBBAQwoWRYUWRW0977kP
zl/LwV+6/PHViwNDtvX0J39e/+zLRVF8/lBRPDj58ZfRg4+DC3n/te4X2g8+
jvD12YVcOcbzf6/7T/0HH3O8/vO6/zZ98HEC7ws8/w/4C7z+n3i/f8H7N7xT
eP+B9194/4NXlPnzbvlfqluv/3Lder+H6tbHV+C55X01+osL8s7VLe9rdev8
et3y3PK+Ae+b8L4Fr5HmKeW55X27bnnfqVved+vW8TCed8t3n728/T28n1vH
9+G55bk1z1KZ9iTPrfORuuWlfjg8t7wf1C3PrfPRuuU9Cu9ReI/Bewze4/Ae
h/c4vCa8Jrwn4D0BL/Uj4f2wbnlunU/WLc8t70l4T8F7Ct6P6u9bXuonw3PL
+3Hd8tw6l+vW/VquPy/frdenfibez63z6TifDc8tzy3PLc+du8l7Bp5bnlue
W+f5urUft7zz8M7DOw/vWXipW+Glfi48t7zUK3H+pG55qZ8Pzy3PLc+d5kgt
L/Vvw3PLc8tL3Y7zp3G+GJ5bXuqXwkv9cnipV+P8Wd3yUr8SnlueW17q38f5
87rlpX41vNSvhZe6DM+t8zmdVRmeW1508Xp4qd8ILz3/Rnz+F3G+GZ5bnlte
dPVmeG49t1K3vHSPLoaXvn4xPLe81Jfidb+sW150sRZe+vpaeOnrl8NLX78c
n3++bnnpXr4VnlueW55b56/Ceyu86OLt8Nzy3PLcOn8dXjzfdOvPm9RX9PqO
W+/n1unW+0cXHXnj1NdinvT8NXnz1Nfjud/EeSPmi65uxHxuzZeefyfmc+u5
6PKdmM+t+dyaz6350vuFd//PCZ03Yz635osub8Z80dXNmC96cjM+79Z8yVuP
+ZK3HvMlbz3mS69fj9elP7e6MV902Y3749Z8bs0XXXXjdGu+6El4Y7fmc2s+
t+Z6oW7NF11sxHxuzRddbsR80dVGnMnbiPncms+t+ZJ/K+Zz63yxbs0XXd6K
+aKrWzGfW/O5dbo1X/I3Y77kb8Z8bs3n1uteCm8z5nNrvuhJeJ3o4nbM59br
3Jovurwd87k1n1vzpfcPr/hdvH94zejqTszn1nxuzefWmbw7MZ9b80UXvZjP
rfncOl+O+Xsxn1vzuTVfdBVeP3oSXuXWfG7N59Z8bs0XXbwb52rdms+t+dya
L7p8N+Zza77oKryRW/O5NZ9b87n1vq/kXjN6kuZzaz635nPLiS7fi/mS/17M
59Z8bs3n1nzxc9EkvKZb87k1n1vzueXCG0WX78d8bs3n1nzR1fsx36t1a77o
SXhtt+Zza77o4oNw3JrPrfnS+30Q87k1n1uv+0Pdms+t+aIn4XWiiw9jvujy
w3idW/O5NZ9b87k1H7z7P8dmXvO13Gu/lnud6CrNFz1J87k1n1vzuTVfdPFR
zJfe76P4/IW6NV909VHM59Z8bs3n1unWfPDG8Kbw5vDSz/np+UaZ+80yf33L
HT8+xD7CK936ftxnXs+t7899xg3gVfCG8Ebp7ylb8vbc+nnJrde5tR/3mTeD
N49eDm/h1nOvx/cdXsOt/UVX4bXc2l/0bnilW/uLnoTXiy4+jv1FL38c+3Pr
fdzan1v7c2t/8MbwJvCm6fsNbxa9Fd7crf2l7z+8+39PTK39ubU/t/bn1v7e
yL0SXgdeD14/ejftz63n3NqfW/tza3/Rk7Q/t0639ufW/qKP0/6ilz+J/bm1
vzfr1v7c2p9b+3Prz5/oMrwyeiu8TnQVXs+t/bnPvIFbZ/RueEO39ufW/qKP
wxu7tSe39ufW/tzaH7wFvOJi7jUu5l7zYu61LuZe+2LuldHFp7E/t/YXvfxp
7M+t/bm1P7f2F12GN3Jrf27tL3orvIlb+3Nrf27tz639wSsu5V7jUu41L+Ve
61LutS/lXgmvE12l/bm1P7f259bp1v7gjeDtwRvDm8CbwpvBm8NbwCvWcq8R
vZv259b+3Npf9CTtz639ubU/t/bn1v6ij9P+3NqfW/tza39u7Q/eBN4U3gze
HN4CXnE59xqXc695Ofdal3OvfTn3SngdeD14fXgDeBW8IbwRvD14Y3gTeFN4
M3hzeAt49b8r/jH259b+3NqfW/tza3/wOvB68PrwBvCq6OXwhm7tz639ubU/
t/YHbwpvBm8ObxFdhpf+HbVM+3Nrf27tz639vZ17JbwOvB68PrwBvAreMHor
7c+t/bm1P7f259b+4M3gzeEt4BVXcq9xJfeaV3Kvlf6dOe3Pre/Trf25tT+3
9gdvAC/9u/Yk7c+t/bm1P7f259YJbwpvBm8ObwGvuJp7jau517yae62rude+
mnslvA68Hrw+vAG8Ct4Q3gjeHrwxvAm8KbwZvDm8Bbyig/11cq/Zyb1WJ/fa
ndwr4XXg9eD14Q3gVdHHaX9u7c+t/bm1P7dceNPo4rPYn1v7c2t/bp3X6tb+
ruVe81rutaKXw2u7tT+39ufW/tzaH7wBvAreEN4I3h68MbwJvCm8Gbw5vAW8
4nruNa7nXvN67rWu5177eu6V8DrwevD68AbwKnhDeCN4e/DG8CbwpvBm8Obw
FvCKG9jfjdxr3si91o3ca9/IvRJeB14PXh/eAF4FbwhvBG8P3hjeBN4U3gze
HN4CXvp/0fT8uXdyv+E+W9dSdJn269Zzbu3bfeatuM+8NrxVeCW8NXgdeF14
PXhb8PrwtuEN4O3Aq+DdhTeEdw/eCN4uvD14+/DG8A7gTeAdwpvCO4I3g3cM
bw7vBN4C3mn0Vrp/N+vW/XPr/rl1/9y6fzdzbxleK/2/erp/bt0/t+6fW3O7
df/gdeB14fXgbcHrw9uGN4C3A6+CdxfeEN49eCN4u/D24O3DG8M7gDeBdwhv
Cu8I3gzeMbw5vBN4C3in8Ir13Du3nnuN9dxbWs+95nruLcNrwVuB14a3Cq+E
twavA68LrwdvC14f3ja8AbwdeBW8u/CG8O7BG8HbhbcHbx/eGN4BvAm8Q3hT
eEfwZvCO4c3hncBbwDuFV3Rz71w39xrd3Fvq5l6zm3vL8FrwVqJ3088/bt0/
99lZunX/3Lp/8LrwevC24PXhbcMbwNuBV8G7C28I7x68EbxdeHvw9uGN4R3A
m8A7hDeFdwRvBu8Y3hzeCbwFvFN4xUbundvIvcZG7i1t5F5zI/eW4bXgrcBr
w1uFV8Jbg9eB14XXg7cFrw9vG94A3g68Ct5deEN49+CN4O3C24O3D28M7yB6
ku6fW/fPrfvn1v1z6/7BO4Y3h3cCbwHvFF76PbvknbuVe41bubd0K/eat3Jv
GV4L3gq8NrxVeCW8NXgdeF14PXhb8PrwtuEN4O3AS79XeJzun1v3z63759b9
c5+du/D24O3DG8M7gDeBdwhvCu8I3gzeMbw5vBN4C3in8IrN3Du3mXuNzdxb
2sy95mbuLcNrwVuB14a3Cq+EtwavA68LrwdvC14f3ja8AbwdeBW8u/CG8O7B
G8HbhbcHbx/eGN4BvAm8Q3hTeEfwZvCO4c3hncBbwDuFl37vtr5/t3OvcTv3
lm7nXvN27i3Da8FbgdeGtwqvhLcGrwOvC68HbwteH942vAG8HXgVvLvwhvDu
wRul31Pu69x16/65df/cun9u3T94E3iH8KbwjuDN4B3Dm8M7gbeAdwqvuJN7
5+7kXuNO7i1FL4fXdOt06/65df/cun/wVuGV8NbgdeB14fXgbcHrw9uGN4C3
A6+CdxfeEN49eCN4u/D24O3DG8M7gDeBdwhvCu8I3gzeMbw5vBN4C3in8NLv
4d/v/wNAFZC9
       "]]}, 
     {RGBColor[0.99, 0., 0.], PointSize[0.003666666666666667], 
      AbsoluteThickness[1.6], Opacity[0.3], PointBox[CompressedData["
1:eJxd2z9sG/cZxvFr06ppy/6V24Zt2ippSieO7DhhkkZpEl8SW05s+k9EWzLj
OFYKlF0EdOCk7SZN3DSxkyZO2jhpu0lAAXbSxE1AAQIBNKRgUVRoUVTm87z3
4PdoOXzF44cvX5xFUraf+8Of1/749SzLvnwqy54c06+vrvxl8OTr4Eraf636
9eaTryO7fVI1jsd2/t+r/lP3ydfU7v9l1X8bP/k6Me8rO/8f5s/s/v+0x/uX
Of/mMcvhnVYN7z9Vw/tv1fD+V7Ufcb4a/tfy9P5fZz/Nx3uqahy/weMP6UWf
o/fNquEtsJ+h9y32s+Y+S08N79vsJXrfqRred6vGsWZe9PP0vlc1vO9XDe8H
7Eb1PKNxfvSL9NXzuzd/xL7Ax4te5vHHVcOLvkQv+jXOs8h+lV50k8dzVcM7
V90f3jnzflKdDy/6dR5/WjW86DfpqeH9rGp40b/j8Zmq4anhRa/Qq7Pfphf9
ex5/zuM79KLfpRf9Hr1fsK/QYxc5vx/X4Qf02MWH9OL2q/R+WTW86FUef8X7
X6MXvUqPnV2n92v2R/Sib/DI67q4yesrukU/rvs7vD87v8vHi/Pv8rznqobH
Lu/Si9s/oaeGx87X6D3P29foscs1euy8TS9uv0ePna3z+Bt669wPu1ynx842
6LHzDXrRD3jeC+wOPXb2KT128Sm96If04v6f8X6/ZT+ixy4f0WMXn9NjZ4/p
xe2P+f34ObNJj10+psfe26THLjbpqeGcrxre+er+8M6bd9489mZ4L+J4HJ4a
HnvpC3pqeOzsCx5fqhoeuwzvJZvvJZtPt8O5UDU8NbwL1ePB0+3wLlSPj/Ne
Nu9le75qeGp4anjLtr9le77L9nx1OzzdDu9idTu8i+ZdNE8N72K1T3iX7Ple
Mk8N75I9XzW8V6p9w3vF9qfb4anhqXG8nJ5fv1x5+HlzOd1XS43H0/l43mo8
/uVqH3NuxN6M58fO6U1jnni+r/LxHnM+9tmfb8ynxnzsPP58q3EeO6M3UGM+
NeZTY76Y53N+/zX6/HlUV2M+dvY559PtmE+3Yz415mOf/fzDfOziEecLjz8f
p3H/RzzyfUz5GedjF5/x+lFjPjXmY8fP50KN+eJ9Er2RGvOpMZ8ax9erxnzs
8iHnU2M+9tnrB+Zj5w/5/fAecj415lNjvvD5ejVV47w3qsZ87LPXM8zHzj/l
fOzq9U+N+6kxX3h8/RyF1+F8asynhvMmjx3Oxy4fcD528YDzsc9evzGfGuep
MV/49EZqzKfGfPH4G/w+36cWfD9RZ5fx/kON+dSYTw0nvHXOp8Z87JzeWI35
1JjvLR7p1dWYT4352OV9zscu7vOoxnxqzKfGfOyc3jQej97Z+/ZozKfGfGrM
xz57/4f51HhcdnGP86kxnxrzqTGfGo/7durV2Tm9phrzqTGfGg67jPez4bc5
nxrzqTGfGvPxc028P66rMZ8a86kxnxqueQP22ftxzKfGfGrMxy7i/f07VWM+
dk6vqcZ8aszHzugVasynxnzxePF5Q4351Ljfu1VjPjXmY+f0WuyMXpdd8vNR
ocZ8asynxnxqzGfe2efQxKu/l3rN91KvxS7i8xg7j/nUmE+N+dSYj53FfOHf
4fevVI352GefJzFf3H6b86kxnxpHNeZTYz7zxuZNzcvy9Pxanvr1PL1/Q823
D3To5Wo8H/Xc66jx/NRzrmdeYV7fvEHMcwveMG6/xfdL6vmhVGM/6rk3UWNf
4bfgzdQ4730eW9yfGvuLvsn9qbE/dsHfR+Rq7C/Ov8H9RX/M/UV/xP2p4aix
PzX2p8b+zBuZV8Z817m/uP069xe3r3J/auwvzo/f53xQNfanxv7U2J8a+1Nj
f+a1zOuY12UX17g/NY5q7E+N/amxv/DpjdTYnxr7U2N/4V3l/qI/5P7UuN+H
VWN/auxPjf2p8fPHnDz6A+4vzn+f+1Njf+q511Onc77P/amxPzX2F53z55ka
+1Njf2rsT439mTczL7uaerWrqVe/mnqNq6nXvJp6efQV7k+N/UW/x/2psT81
9qfG/qLf5f7U2J8a+4vm63qpxv7U2J8a+1Njf+bFdR1e7Vrq1a+lXuNa6jWj
432VGvuL5u+rO2rsT439qbE/NfZn3sC8oXmj6Hgfrcb+1NifGvtTY3/mVT8H
6dWi3+L+1NifGvuLjs81auxPjf2psT819hcdnxvV2J8a+1Njf2rsz7zSvLF5
E/Om5s3MO3vdSbza9dSrX0+9xvXUa15Pvdy8lnkd87rm9cwrzOubNzBvaN7I
vNK8sXkT86bmzcyL1/XsDe5Pjf2psT819qfG/sxrmdcxr2tez7wiusn9qbE/
Nfanxv7U2J95Y/Mm5k3Nm0XH79k+rhr7U2N/auxPjf19nHq5eS3zOuZ1zeuZ
V5jXj46/71Rjf2rsT439qbE/8ybmTc2bmVf9PRy92o3Uq99IvUb0Ze5Pjf2p
sT819qfG/szrmRfvy7Nl7k+N/amxPzX2p8b+zBubNzFvat7MvLPPEYlXu5l6
9Zup17iZes2bqZeb1zKvY17XvJ55hXl98wbmDc0bmVeaNzZvYt7UvJl5WSv1
aq3Uq7dSr9FKvWYr9XLzWuZ1zOua1zOv+px5gftTY39q7E+N/amxP/PG0S9y
f2rsT439qXG8VTX2dyv16rdSrxHd4P7U2J8a+1Njf2rsz7yeeYV5ffMG5g3N
G5lXmjc2b2Le1LyZefF7jvBqt1Ovfjv1GrdTr3k79XLzWuZ1zOua1zOvMK9v
3sC8oXkj80rzxuZNzJuaNzMvu5N6tTupV7+Teo07qde8k3q5eS3zOuZ1zeuZ
V5jXN29g3tC8kXmleWPzJuZNzZuZl91Nz19QY5/q+boWo1/gftXzw5Ia+1bP
vWX13Guat2Jebt6qeS3z2uZ1zNs0r2velnk987bNK8zbMa9v3q55A/P2zBua
t2/eyLwD80rzDs0bm3dk3sS8Y/Om5p2YNzPvNPp5Hj+pGtefGtefGtefGtff
J6m3ZF4jeonXnxrXnxrXn3p+yNW4/sxrmdc2r2Pepnld87bM65m3bV5h3o55
ffN2zRuYt2fe0Lx980bmHZhXmndo3ti8I/Mm5h2bNzXvxLyZeafmxd+bhbew
lnq1tdRbXEu9+lrqLZnXMG/ZvKZ5K+bl5q2a1zKvbV7HvE3zuuZtmdczb9u8
wrwd8/rm7Zo3MG/PvKF5++aNzDswrzTv0LyxeUfmTcw7Nm9q3ol5M/NOzcva
qbfQTr1aO/UW26lXb6feknkN85ajn+X7HzWuP/X8kKtx/alx/ZnXNq9j3qZ5
XfO2zOuZt21eYd6OeX3zds0bmLdn3tC8ffNG5h2YV5p3aN7YvCPzJuYdmzc1
78S8mXmn5mX3Um/hXurV7qXe4r3Uq99LvSXzGuYtm9c0b8W83LxV81rmtc3r
mLdpXte8LfN65m2bV5i3Y17fvF3zBubtmTc0b9+8kXkH0fx3/6Ua158a158a
158a1595x+ZNzTsxb2beqXnVv3Oit3A/9Wr3U2/xfurV76feknkN85bNa5q3
Yl5u3qp5LfPa5nXM2zSva96WeT3zts2Lf3cW/x9oR43rT43rT43rTz0/7Jk3
NG/fvJF5B+aV5h2aNzbvyLyJecfmTc07MW9m3ql51f+LoLewnnq19dRbXE+9
+nrqLZnXMG/ZvKZ5K+bl5q2a1zKvbV7HvE3zuuZtmdczb9u8wrwd8/rm7Zo3
MG/PvKF5++aNzDswrzTv0LyxeUfmTcw7Nm9q3ol5M/NOzcs2Um9hI/VqG6m3
uJF69Y3UWzKvYd6yeU3zVszLzVs1r2Ve27yOeZvmdc3bMq9n3rZ5hXk75vXN
2zVvEM3/Z7inxvWnxvWnxvWnxvVnXmneoXlj847Mm5h3bN7UvBPzZuadmpc9
SL2FB6lXe5B6i9FP8/pTzw9Lalx/alx/alx/5q2Yl5u3al7LvLZ5HfM2zeua
t2Vez7xt8wrzdszrm7dr3sC8PfOG5u2bNzLvwLzSvEPzxuYdmTcx79i8qXkn
5s3MOzUv61T9f0Rz6zM=
       "]]}, 
     {RGBColor[0.5, 0.5, 0.5], PointSize[0.003666666666666667], 
      AbsoluteThickness[1.6], Opacity[0.3], PointBox[CompressedData["
1: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
/qX13JfW68Pz4A3g+fCG8AJ4I3ghvDG8CN46vBjeBrwE3ia8FN4WvAzeNrwc
3g68At4uvBLeHrwK3j68Gt4BvAbeIbwW3hG8Dt4xPGfNenNr1uutWW9+zXru
mvX68Dx4A3g+vCG8AN4IXghvDC+Ctw4vhrcBL4G3CS+FtwUvg7cNL4e3A6+A
twuvhLcHr4K3D6+GdwCvgXcIr4V3BK+DdwzPGVtvbmy93th682PruWPr9eF5
8Aba8vsH3hBeAG8EL4Q3hhfBW4cXw9uAl8DbhJfC24KXwduGl8PbgVfA24VX
wtuDV8Hbh1fDO4DXwDuE18I7gtfBO4bnvLLe3Cvr9V5Zb/6V9dxX1uvD8+AN
4PnwhvACeCN4IbwxvAjeOrwY3ga8BN4mvBTeFrwM3ja8HN4OvALeLrwS3h68
Ct4+vBreAbwG3iG8Ft4RvA7eMTzntfXmXluv99p686+t5762Xh+eB28Az4c3
hBfAG8EL4Y3hRfDW4cXwNuAl8DbhpfC24GXwtuHl8HbgFfB24ZXw9uBV8Pbh
1fAO4DXwDuG18I7gdfCO4TlvrDf3xnq9N9abf2M99431+vA8eAN4PrwhvADe
CF4IbwwvgrcOL4a3AS+BtwkvhbcFL4O3DS+HtwOvgLcLr4S3B6+Ctw+vhncA
r4F3CK+FdwSvg3cMz3lrvbm31uu9td78W+u5b63Xh+fBG8Dz4Q3hBfBG8EJ4
Y3gRvHV4MbwNeAm8TXgpvC14GbxteDm8HXgFvF14Jbw9eBW8fXg1vAN4DbxD
eC28I3gdvGN4zjvrzb2zXu+d9ebfWc99Z70+PA/eAJ4PbwgvgDeCF8Ibw4vg
rcOL4W3AS+BtwkvhbcHL4G3Dy+HtwCvg7cIr4e3Bq+Dtw6vhHcBr4B3Ca+Ed
wevgHcNzoln/H9VIa6A=
       "]]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
J/y21PvX8TEGAqSOcMwn/D8clK37
        "]]},
      Annotation[#, "Charting`Private`Tag$82990#1"]& ], 
     TagBox[
      {RGBColor[0, 0., 0.6], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$82990#2"]& ], 
     TagBox[
      {RGBColor[0.99, 0., 0.], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
zeKC479tBX64KEI3ImAm+qULAm5rr64GKJLzVTgv5psLDtpvGRWNVMSYr1+o
1pILLKvGn5nmKaKFGevTTHXFtoikkyXfFeEfJG1jGusKSaWgw22zioASITGe
6Qqhjw62AxzboeW3GmFQ4goKIacsQN2O342hHrzvXPGO9clAWOB2JC75d3Eq
uKGz/M6ri5Hb0ZBiaGeo44YWr5SagkvkO37NL6Rl6YZHrU5p7x9tR8B2E70d
x9yQnDxjtOfPdkiO6Ytfr3aDjoBiKftZJSSZdD+W03JHJ4vzi1eXlBAhYK56
wNAdHlNJ3zLylKC1QOV0sHPHue6fG6nNSrgTp1/re5TEXyyKslijjD/mDWK6
+SQ+8v0/IiLK2Pf8r4JxiTumA7kef5ZXhseA1wxXjTs2Wvj+DDZWRvJZf/4n
3SSem2qTcV4ZhgGhbfOLJH6REcDMVoapc5zpZ3Ymzv1KjFd4oAyLntWQWF4m
il4M19R0KkNgS789xxYmdleLvon9rIydDMEvg1QmOguNJ8wnlSHxwb38nBoT
0wmFsp/5VdAi+qmTRY/kO/FuT6GMCuQ/lo8NmDIh4r2WEayuAi7W25zRNkzo
GPqksNmrQPfEc3aOAySeXWF2W6YKJOzfcNMiSPyM44apQhVs8aSPyEYzUfgt
gVpTrYKkwcth/fFMvGr+4Wbep4IjiVlHblxmwqNsY7jwqAo6d4u/u5tB1nPT
6MqnZRUopMj3H88i+aILWoMkVXFEx7Uo4DbJF/R2YJeqKmi1JoFXC8l6PDiX
WKGKDGGDpphiUt/+ncIdVqpIdC6V0XlI8hPequkHVDF1/SdvfTnJr3LNxD1E
FY0/zrNxVZH1S7Z5bosl8af/RknVkP6tyGdW31bFxRcxIiVPSP/GHMpiHqtC
9+Yf5W3NJH9/fIdZqyqqSk68Cmgh+Tsqh4TeqqKYpSr0bCvJXztE+fRDlXy3
h24xnzMRd19kc8G8KpYqNd7ztDORYnFL7H/sNLzUepOe/JIJe4PaAnEeGrrv
zjP+62BCcs9rjWhhMr9m+62pV0z80BhpGpSgoTTi8e/+TiYeKrHtN5WnIXnh
5vPMLiZOym3uL1GhwSdoMXdrNxP7xNV9BXfS4Pjv87lYMuYWMvtzgqDhEM9G
ywoy7uX2jO03oiFPeEK6ioxz2CL4dK1oEO5zHk8hY++lKzfuMGjosfTS0CTj
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
lqBb
        "]]},
      Annotation[#, "Charting`Private`Tag$82990#3"]& ], 
     TagBox[
      {RGBColor[0., 0., 0.], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$82990#4"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{633.333333333331, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100.}, {0, 250}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7964445946642447`*^9, 3.796444666375811*^9}, 
   3.7964448069764977`*^9, 3.796609939944503*^9, {3.796610019059062*^9, 
   3.796610138527133*^9}, {3.796610173608122*^9, 3.796610193263751*^9}, 
   3.796612263468226*^9, {3.796612304956916*^9, 3.796612356683524*^9}, 
   3.7966124613014393`*^9, 3.7966125120271387`*^9, 3.796612679736191*^9, 
   3.7966128238145933`*^9, 3.7966129089508677`*^9, {3.796618171007601*^9, 
   3.7966181905529013`*^9}, 3.796625479622974*^9, 3.796625514253684*^9, 
   3.796752948857151*^9, 3.800922601333929*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"836891e0-446b-4161-934e-735e4bb0c787"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "\[Beta]", ",", "\[Gamma]", ",", "\[Alpha]", ",", "Chi2", ",", 
    "\[Theta]est", ",", "\[Theta]min", ",", "\[Theta]max"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S0", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"Length", "[", "\[Theta]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]est", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0.006", ",", "0.0026", ",", "0.055"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]min", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0.004", ",", "0.0016", ",", "0.035"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]max", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0.008", ",", "0.0036", ",", "0.075"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Qtde\[Theta]", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "10", ",", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h\[Theta]", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"#2", "-", "#1"}], 
       RowBox[{"#3", "-", "1"}]], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]min", ",", "\[Theta]max", ",", "Qtde\[Theta]"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LimDo", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\[Theta]", ",", "\[Theta]min", ",", "\[Theta]max", ",", "h\[Theta]"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"count", "++"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list", ",", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", "\[Theta]", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"SIRDModelChiSqrd", "[", 
              RowBox[{"FinalTime", ",", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", "S0", "}"}], ",", "\[Theta]"}], "]"}]}], "]"}], 
             "}"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Sequence", "@@", "LimDo"}], "]"}]}], "]"}], ",", 
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<count: \>\"", ",", "count"}], "}"}], "]"}]}], "]"}], 
   ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Chi2Kernel", "=", 
   RowBox[{"Interpolation", "[", "list", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Chi2", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{"Chi2Kernel", "[", 
     RowBox[{"Sequence", "@@", "\[Theta]"}], "]"}]}], ";"}], "\n", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]bf", "=", 
   RowBox[{"FindArgMin", "[", " ", 
    RowBox[{
     RowBox[{"Chi2", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", "#2", ",", "#3"}], "}"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "\[Theta]min", ",", "\[Theta]max"}], 
          "}"}]}], "]"}]}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "}"}], "=", 
   "\[Theta]bf"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[DoubleStruckS]", ",", "\[DoubleStruckI]", ",", "\[DoubleStruckR]", 
      ",", "\[DoubleStruckD]"}], "}"}], " ", "=", " ", 
    RowBox[{"SIRDModelSolve", "[", 
     RowBox[{"FinalTime", ",", 
      RowBox[{"{", 
       RowBox[{"S0", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], 
       "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "FinalNotInfectedList", ",", "FinalRecoveredList", ",", 
       "FinalInfectedList", ",", "FinalDeathsList"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "FinalTime"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "250"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.2", ",", "0", ",", "0.3"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.0", ",", "0.5", ",", "0.3"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.99", ",", "0.0", ",", "0.0", ",", "0.3"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.5", ",", "0.5", ",", "0.5", ",", "0.3"}], "]"}]}], 
       "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[DoubleStruckS]", "[", "t", "]"}], ",", 
       RowBox[{"\[DoubleStruckR]", "[", "t", "]"}], ",", 
       RowBox[{"\[DoubleStruckI]", "[", "t", "]"}], ",", 
       RowBox[{"\[DoubleStruckD]", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "FinalTime"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.5", ",", "0"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.0", ",", "0.6"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.99", ",", "0.0", ",", "0.0"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.0", ",", "0.0", ",", "0.0"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\n"}], "Code",
 CellChangeTimes->{{3.796435570114994*^9, 3.7964357030559893`*^9}, {
   3.796435751514104*^9, 3.796435801177202*^9}, 3.796435921520485*^9, {
   3.796436152614737*^9, 3.796436208884861*^9}, {3.796436288476715*^9, 
   3.7964362970449142`*^9}, {3.7964364309877777`*^9, 3.796436431567*^9}, {
   3.796436488695945*^9, 3.7964365094772577`*^9}, {3.7964365605677013`*^9, 
   3.796436564600828*^9}, {3.796436803050376*^9, 3.796436807829136*^9}, {
   3.796436859889674*^9, 3.796436860669107*^9}, {3.79643689166891*^9, 
   3.796436953402763*^9}, {3.796437013929628*^9, 3.796437020648342*^9}, {
   3.796437524587863*^9, 3.7964375299808073`*^9}, {3.796438758322801*^9, 
   3.79643875848669*^9}, {3.7964392476024837`*^9, 3.796439269970978*^9}, {
   3.796439415372785*^9, 3.796439415678825*^9}, 3.7964445313139*^9, {
   3.796444746410186*^9, 3.796444828212092*^9}, {3.796609987419083*^9, 
   3.796609990266754*^9}, {3.796610221927087*^9, 3.796610270735097*^9}, {
   3.7966125538466253`*^9, 3.79661258989764*^9}, {3.7966126857835293`*^9, 
   3.796612688939115*^9}, {3.796612735058928*^9, 3.7966128126146803`*^9}, {
   3.7966129197449083`*^9, 3.796612926062828*^9}, {3.796612967044566*^9, 
   3.796613000563748*^9}, {3.79661309599627*^9, 3.796613104804511*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"964d22a9-f80b-4920-99cb-1c02a8bc7cf7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.006104958058732722`", ",", "0.0030705888911658993`", ",", 
   "0.050674249729354554`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.796612766752955*^9, {3.7966128175663767`*^9, 3.7966128417418327`*^9}, 
   3.796612985663628*^9, 3.796613015878272*^9, 3.79661308803325*^9, 
   3.7966131253229523`*^9, 3.7966263716481943`*^9, 3.7967529771019*^9, 
   3.800922627056883*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"58490773-770c-4f64-a39a-cafcdc304b31"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0, 0.2, 0], PointSize[0.003666666666666667], AbsoluteThickness[
      1.6], Opacity[0.3], PointBox[CompressedData["
1:eJxd2ztsJWcZh/EhAXM7QGADJBDACcGEYC7B4WJumUDWCWTIzUnYQZvkZC+z
FJYopnI3lavpXA2Vq1O5m8rdVJaQhsrVdJaQRorkAjQIYYEQ3vm/37ya52tG
T845P79+9e3Gm8vjt/70xt0Hoij64MEouv+cnfM/xn+u7p+T5+b9l6mf3bp/
zvB6N7VBeP/fpr6X3T89Pv/B1H9t758LeH/H+/8Bf8Dn/4mv9y94/1Y3wbuc
Wt5/ppb336nl/W9q21w8f7+3/A/F888/oD4KX+/BqcV9WM8ieNbL4H1EHQdv
Tb0evI+aE7yPTS3PW97H1ef3zPvE1PI+ObU+t5hanvXRPfM+NbW8T08t7zP2
/QTvoan1fus4+N7jx7c+a99v+HrWUfA+N7U86/PMPOsis3muTS3POs7MeXhq
ed7yvOV93uYLnnUUvC9MLc+6uWuet7wvTi3P+uiuOY/Y/HfN85ZnHQfvUZsv
eNZR8L5k+7pjnnVzxzzr4o55X1Yv75hnvX7HvMfs87fNs17eNs86vm3eV6aW
Z93cMu+rU8uzXt4yzzq+Zd7X7HO3zLMu3re/vm7zvm/3y7pZmh9eX9rnreP3
7OtZR+/Z83H7/LvmWRfvmhdef8c8b3nW0Tv2fMJev2medXHTPOvopnnh9T+Y
Zx2n9r6vm3fD9mNd3DDPOr5hnnV0w7zQv7fnk/Z827zQb5kX+k3zQu+aF/oN
e37Dnq+bZx2/Zl54/VXzQr9iXujf2XPDnol5oV82L/RL5lkXL5oXesfe903r
6+ZZR9fNC6+/YF54/QXzvPV8yp6/Ms+6eN680LF53vK85XzLnrF53vJCP2de
6F+aF/oX9nzanj83z1te6J+Y5y0v9I/s+e2p5YV+1jxveaG3zPPWc3Nqed7y
Qv/AvNDPmBf6+/b8jj2/a17oTfO85YV+2jzv4Oj5lHmhnzTPW17oJ8zz1vN7
9nzMPG95oR8xz1ue9/z7fljvf9Rbv9+EfkifT7z19ULbzxWFt76+98jVoSOb
x3v0em89npla83lrPm/N5635vDUfvApeDa+F18O7ulfz+bw1n7fmmzrSfN6a
z1vzeWs+b80Hr4c3/Tox71Fv3R9vzeet+bw1H7wKXg2vhdfDu/p1Pp/PW/N5
az5vzeet+eBV8Gp4LbweXvRDzOet+bw1n7fm89Z88Cp4NbwWXg9v+n01zOet
+bw1n7fm89Z88Cp4NbwWXg8v+jHm89Z83prPW/N5az54FbwaXguvh3f196n5
fN6az1vzeWs+b80Hr4JXw2vh9fCibcznrfm8NZ+35vPWfPAqeDW8Fl4PL/op
5vPWfN6az1vzeWs+eBW8Gl4Lr4cX/QzzeWs+b83nrfm8NR+8Cl4Nr4XXw7v6
OWo+n7fm89Z83prPW/PBq+DV8Fp4Pbzp58Awn7fm89Z83prPW/PBq+DV8Fp4
Pbyrn1vn83lrPm/N5635vDUfvApeDa+F18O7+jl7Pp+35vPWfN6az1vzwavg
1fBaeD28KJ6/f+Gteb3v6Y9LU9uPD3MvhpfAS+Fl8HJ4BbwSXgVvBa+G18Br
4XXwengDvOj5ubfw1v68tT9v7c97PDG8BF4KL4OXwyvglfAqeCt4NbwGXguv
g9fDG+Bd/bl35i28tT9v7c9b+/MeTwwvgZfCy+Dl8Ap4JbwK3gpeDa+B18Lr
4PXwBnjRr+fewlv789b+vPX7j/d4YngJvBReBi+HV8Ar4VXwVvBqeA28Fl4H
r4c3wJv+OUzYn7f25639eWt/3uOJ4SXwUngZvBxeAa+EV8FbwavhNfBaeB28
Ht4AL7o+9xbe2p+39uet/XmPJ4aXwEvhZfByeAW8El4FbwWvhtfAa+F18Hp4
A7xoZ2rtz1v789b+vLU/7/HE8BJ4KbwMXg6vgFfCq+Ct4NXwGngtvA5eD2+A
F7049xbe2p+39uet/XmPJ4aXwEvhZfByeAW8El4FbwWvhtfAa+F18Hp4A7zo
pbm38Nb+vLU/b+3PezwxvAReCi+Dl8Mr4JXwKngreDW8Bl4Lr4PXwxvgRb+Z
ewtv7c9b+/PW/rzHE8NL4KXwMng5vAJeCa+Ct4JXw2vgtfA6eD28AV7027m3
8Nb+vLU/b+3PezwxvAReCi+Dl8Mr4JXwKngreDW8Bl4Lr4PXwxvgRS/PvYW3
9uet/Xlrf97jieEl8FJ4GbwcXgGvhFfBW8Gr4TXwWngdvB7eAC9K5t7CW/vz
1v68tT/v8cTwEngpvAxeDq+AV8Kr4K3g1fAaeC28Dl4Pb4A3/XvWsD9v7c9b
+/PW/rzHE8NL4KXwMng5vAJeCa+Ct4JXw2vgtfA6eD28AV70ytxbeGt/3tqf
t/bnPZ4YXgIvhZfBy+EV8Ep4FbwVvBpeA6+F18Hr4Q3wolfn3sJb+/PW/ry1
P+/xxPASeCm8DF4Or4BXwqvgreDV8Bp4LbwOXg9vgBe9Nn//mrf26T2u65q3
9us9nnV4G/A24W3B24YXw9uBl8DbhZfCW8LL4O3By+HtwyvgHcAr4R3Cq+Ad
wVvBO4ZXwzuB18A7hdfCO4PXwTuH18O7gDfAu4QXvT731rx1/7x1/7x1/7zH
sw5vA94mvC142/BieDvwEni78FJ4S3gZvD14Obx9eAW8A3glvEN4FbwjeCt4
x/BqeCfwGnin8Fp4Z/A6eOfwengX8AZ4l/Cm/+4s3D9v3T9v3T9v3T/v8azD
24C3CW8L3ja8GN4OvATeLrwU3hJeBm8PXg5vH14B7wBeCe8QXgXvCN4K3jG8
Gt4JvAbeKbwW3hm8Dt45vB7eBbwB3iW8aHfurXnr/nnr/nnr/nmPZx3eBrxN
b/38A28bXgxvB14CbxdeCm8JL4O3By+Htw+vgHcAr4R3CK+CdwRvBe8YXg3v
BF4D7xReC+8MXgfvHF4P7wLeAO8SXvTm3Fvz1v3zHr1r3rp/3uNZh7cBbxPe
FrxteDG8HXgJvF14KbwlvAzeHrwc3j68At4BvBLeIbwK3hG8FbxjeDW8E3gN
vFN4LbwzeB28c3g9vAt4A7xLeNFbc2/NW/fPW/fPW/fPezzr8DbgbcLbgrcN
L4a3Ay+BtwsvhbeEl8Hbg5fD24dXwDuAV8I7hFfBO4K3gncMr4Z3Aq+Bdwqv
hXcGr4N3Dq+HdwFvgHcJL3p77q156/556/556/55j2cd3ga8TXhb8LbhxfB2
4CXwduGl8JbwMnh78HJ4+/AKeAfwSniH8Cp4R/BW8I7h1fBO4DXwTuG18M7g
dfDO4fXwLuAN8C7hTf8fTbh/3rp/3rp/3rp/3uNZh7cBbxPeFrxteDG8HXgJ
vF14KbwlvAzeHrwc3j68At4BvBLeIbwK3hG8FbxjeDW8E3gNvFN4LbwzeB28
c3g9vAt4A7xLeNGNubfmrfvnrfvnrfvnPZ51eBvwNuFtwduGF8PbgZfA24WX
wlvCy+Dtwcvh7cMr4B3AK+EdwqvgHcFbwTuGV8M7gdfAO4XXwjuD18E7h9fD
u4A3wLuEF6VT/x9caEPS
       "]]}, 
     {RGBColor[0, 0., 0.5], PointSize[0.003666666666666667], 
      AbsoluteThickness[1.6], Opacity[0.3], PointBox[CompressedData["
1:eJxd2j1sW9cZxvHbpnW/2Dat0iRMk1aJU7ZN1fSDSRqlaXyT2HJi03YsyrKZ
TyVp2EVAB07a7uSJmyd20qRJGydtnAQUYCdN3AQUIBBAQwoWRYUWRW0977kP
zl/LwV+6/PHViwNDtvX0J39e/+zLRVF8/lBRPDj58ZfRg4+DC3n/te4X2g8+
jvD12YVcOcbzf6/7T/0HH3O8/vO6/zZ98HEC7ws8/w/4C7z+n3i/f8H7N7xT
eP+B9194/4NXlPnzbvlfqluv/3Lder+H6tbHV+C55X01+osL8s7VLe9rdev8
et3y3PK+Ae+b8L4Fr5HmKeW55X27bnnfqVved+vW8TCed8t3n728/T28n1vH
9+G55bk1z1KZ9iTPrfORuuWlfjg8t7wf1C3PrfPRuuU9Cu9ReI/Bewze4/Ae
h/c4vCa8Jrwn4D0BL/Uj4f2wbnlunU/WLc8t70l4T8F7Ct6P6u9bXuonw3PL
+3Hd8tw6l+vW/VquPy/frdenfibez63z6TifDc8tzy3PLc+du8l7Bp5bnlue
W+f5urUft7zz8M7DOw/vWXipW+Glfi48t7zUK3H+pG55qZ8Pzy3PLc+d5kgt
L/Vvw3PLc8tL3Y7zp3G+GJ5bXuqXwkv9cnipV+P8Wd3yUr8SnlueW17q38f5
87rlpX41vNSvhZe6DM+t8zmdVRmeW1508Xp4qd8ILz3/Rnz+F3G+GZ5bnlte
dPVmeG49t1K3vHSPLoaXvn4xPLe81Jfidb+sW150sRZe+vpaeOnrl8NLX78c
n3++bnnpXr4VnlueW55b56/Ceyu86OLt8Nzy3PLcOn8dXjzfdOvPm9RX9PqO
W+/n1unW+0cXHXnj1NdinvT8NXnz1Nfjud/EeSPmi65uxHxuzZeefyfmc+u5
6PKdmM+t+dyaz6350vuFd//PCZ03Yz635osub8Z80dXNmC96cjM+79Z8yVuP
+ZK3HvMlbz3mS69fj9elP7e6MV902Y3749Z8bs0XXXXjdGu+6El4Y7fmc2s+
t+Z6oW7NF11sxHxuzRddbsR80dVGnMnbiPncms+t+ZJ/K+Zz63yxbs0XXd6K
+aKrWzGfW/O5dbo1X/I3Y77kb8Z8bs3n1uteCm8z5nNrvuhJeJ3o4nbM59br
3Jovurwd87k1n1vzpfcPr/hdvH94zejqTszn1nxuzefWmbw7MZ9b80UXvZjP
rfncOl+O+Xsxn1vzuTVfdBVeP3oSXuXWfG7N59Z8bs0XXbwb52rdms+t+dya
L7p8N+Zza77oKryRW/O5NZ9b87n1vq/kXjN6kuZzaz635nPLiS7fi/mS/17M
59Z8bs3n1nzxc9EkvKZb87k1n1vzueXCG0WX78d8bs3n1nzR1fsx36t1a77o
SXhtt+Zza77o4oNw3JrPrfnS+30Q87k1n1uv+0Pdms+t+aIn4XWiiw9jvujy
w3idW/O5NZ9b87k1H7z7P8dmXvO13Gu/lnud6CrNFz1J87k1n1vzuTVfdPFR
zJfe76P4/IW6NV909VHM59Z8bs3n1unWfPDG8Kbw5vDSz/np+UaZ+80yf33L
HT8+xD7CK936ftxnXs+t7899xg3gVfCG8Ebp7ylb8vbc+nnJrde5tR/3mTeD
N49eDm/h1nOvx/cdXsOt/UVX4bXc2l/0bnilW/uLnoTXiy4+jv1FL38c+3Pr
fdzan1v7c2t/8MbwJvCm6fsNbxa9Fd7crf2l7z+8+39PTK39ubU/t/bn1v7e
yL0SXgdeD14/ejftz63n3NqfW/tza3/Rk7Q/t0639ufW/qKP0/6ilz+J/bm1
vzfr1v7c2p9b+3Prz5/oMrwyeiu8TnQVXs+t/bnPvIFbZ/RueEO39ufW/qKP
wxu7tSe39ufW/tzaH7wFvOJi7jUu5l7zYu61LuZe+2LuldHFp7E/t/YXvfxp
7M+t/bm1P7f2F12GN3Jrf27tL3orvIlb+3Nrf27tz639wSsu5V7jUu41L+Ve
61LutS/lXgmvE12l/bm1P7f259bp1v7gjeDtwRvDm8CbwpvBm8NbwCvWcq8R
vZv259b+3Npf9CTtz639ubU/t/bn1v6ij9P+3NqfW/tza39u7Q/eBN4U3gze
HN4CXnE59xqXc695Ofdal3OvfTn3SngdeD14fXgDeBW8IbwRvD14Y3gTeFN4
M3hzeAt49b8r/jH259b+3NqfW/tza3/wOvB68PrwBvCq6OXwhm7tz639ubU/
t/YHbwpvBm8ObxFdhpf+HbVM+3Nrf27tz639vZ17JbwOvB68PrwBvAreMHor
7c+t/bm1P7f259b+4M3gzeEt4BVXcq9xJfeaV3Kvlf6dOe3Pre/Trf25tT+3
9gdvAC/9u/Yk7c+t/bm1P7f259YJbwpvBm8ObwGvuJp7jau517yae62rude+
mnslvA68Hrw+vAG8Ct4Q3gjeHrwxvAm8KbwZvDm8Bbyig/11cq/Zyb1WJ/fa
ndwr4XXg9eD14Q3gVdHHaX9u7c+t/bm1P7dceNPo4rPYn1v7c2t/bp3X6tb+
ruVe81rutaKXw2u7tT+39ufW/tzaH7wBvAreEN4I3h68MbwJvCm8Gbw5vAW8
4nruNa7nXvN67rWu5177eu6V8DrwevD68AbwKnhDeCN4e/DG8CbwpvBm8Obw
FvCKG9jfjdxr3si91o3ca9/IvRJeB14PXh/eAF4FbwhvBG8P3hjeBN4U3gze
HN4CXvp/0fT8uXdyv+E+W9dSdJn269Zzbu3bfeatuM+8NrxVeCW8NXgdeF14
PXhb8PrwtuEN4O3Aq+DdhTeEdw/eCN4uvD14+/DG8A7gTeAdwpvCO4I3g3cM
bw7vBN4C3mn0Vrp/N+vW/XPr/rl1/9y6fzdzbxleK/2/erp/bt0/t+6fW3O7
df/gdeB14fXgbcHrw9uGN4C3A6+CdxfeEN49eCN4u/D24O3DG8M7gDeBdwhv
Cu8I3gzeMbw5vBN4C3in8Ir13Du3nnuN9dxbWs+95nruLcNrwVuB14a3Cq+E
twavA68LrwdvC14f3ja8AbwdeBW8u/CG8O7BG8HbhbcHbx/eGN4BvAm8Q3hT
eEfwZvCO4c3hncBbwDuFV3Rz71w39xrd3Fvq5l6zm3vL8FrwVqJ3088/bt0/
99lZunX/3Lp/8LrwevC24PXhbcMbwNuBV8G7C28I7x68EbxdeHvw9uGN4R3A
m8A7hDeFdwRvBu8Y3hzeCbwFvFN4xUbundvIvcZG7i1t5F5zI/eW4bXgrcBr
w1uFV8Jbg9eB14XXg7cFrw9vG94A3g68Ct5deEN49+CN4O3C24O3D28M7yB6
ku6fW/fPrfvn1v1z6/7BO4Y3h3cCbwHvFF76PbvknbuVe41bubd0K/eat3Jv
GV4L3gq8NrxVeCW8NXgdeF14PXhb8PrwtuEN4O3AS79XeJzun1v3z63759b9
c5+du/D24O3DG8M7gDeBdwhvCu8I3gzeMbw5vBN4C3in8IrN3Du3mXuNzdxb
2sy95mbuLcNrwVuB14a3Cq+EtwavA68LrwdvC14f3ja8AbwdeBW8u/CG8O7B
G8HbhbcHbx/eGN4BvAm8Q3hTeEfwZvCO4c3hncBbwDuFl37vtr5/t3OvcTv3
lm7nXvN27i3Da8FbgdeGtwqvhLcGrwOvC68HbwteH942vAG8HXgVvLvwhvDu
wRul31Pu69x16/65df/cun9u3T94E3iH8KbwjuDN4B3Dm8M7gbeAdwqvuJN7
5+7kXuNO7i1FL4fXdOt06/65df/cun/wVuGV8NbgdeB14fXgbcHrw9uGN4C3
A6+CdxfeEN49eCN4u/D24O3DG8M7gDeBdwhvCu8I3gzeMbw5vBN4C3in8NLv
4d/v/wNAFZC9
       "]]}, 
     {RGBColor[0.99, 0., 0.], PointSize[0.003666666666666667], 
      AbsoluteThickness[1.6], Opacity[0.3], PointBox[CompressedData["
1:eJxd2z9sG/cZxvFr06ppy/6V24Zt2ippSieO7DhhkkZpEl8SW05s+k9EWzLj
OFYKlF0EdOCk7SZN3DSxkyZO2jhpu0lAAXbSxE1AAQIBNKRgUVRoUVTm87z3
4PdoOXzF44cvX5xFUraf+8Of1/749SzLvnwqy54c06+vrvxl8OTr4Eraf636
9eaTryO7fVI1jsd2/t+r/lP3ydfU7v9l1X8bP/k6Me8rO/8f5s/s/v+0x/uX
Of/mMcvhnVYN7z9Vw/tv1fD+V7Ufcb4a/tfy9P5fZz/Nx3uqahy/weMP6UWf
o/fNquEtsJ+h9y32s+Y+S08N79vsJXrfqRred6vGsWZe9PP0vlc1vO9XDe8H
7Eb1PKNxfvSL9NXzuzd/xL7Ax4te5vHHVcOLvkQv+jXOs8h+lV50k8dzVcM7
V90f3jnzflKdDy/6dR5/WjW86DfpqeH9rGp40b/j8Zmq4anhRa/Qq7Pfphf9
ex5/zuM79KLfpRf9Hr1fsK/QYxc5vx/X4Qf02MWH9OL2q/R+WTW86FUef8X7
X6MXvUqPnV2n92v2R/Sib/DI67q4yesrukU/rvs7vD87v8vHi/Pv8rznqobH
Lu/Si9s/oaeGx87X6D3P29foscs1euy8TS9uv0ePna3z+Bt669wPu1ynx842
6LHzDXrRD3jeC+wOPXb2KT128Sm96If04v6f8X6/ZT+ixy4f0WMXn9NjZ4/p
xe2P+f34ObNJj10+psfe26THLjbpqeGcrxre+er+8M6bd9489mZ4L+J4HJ4a
HnvpC3pqeOzsCx5fqhoeuwzvJZvvJZtPt8O5UDU8NbwL1ePB0+3wLlSPj/Ne
Nu9le75qeGp4anjLtr9le77L9nx1OzzdDu9idTu8i+ZdNE8N72K1T3iX7Ple
Mk8N75I9XzW8V6p9w3vF9qfb4anhqXG8nJ5fv1x5+HlzOd1XS43H0/l43mo8
/uVqH3NuxN6M58fO6U1jnni+r/LxHnM+9tmfb8ynxnzsPP58q3EeO6M3UGM+
NeZTY76Y53N+/zX6/HlUV2M+dvY559PtmE+3Yz415mOf/fzDfOziEecLjz8f
p3H/RzzyfUz5GedjF5/x+lFjPjXmY8fP50KN+eJ9Er2RGvOpMZ8ax9erxnzs
8iHnU2M+9tnrB+Zj5w/5/fAecj415lNjvvD5ejVV47w3qsZ87LPXM8zHzj/l
fOzq9U+N+6kxX3h8/RyF1+F8asynhvMmjx3Oxy4fcD528YDzsc9evzGfGuep
MV/49EZqzKfGfPH4G/w+36cWfD9RZ5fx/kON+dSYTw0nvHXOp8Z87JzeWI35
1JjvLR7p1dWYT4352OV9zscu7vOoxnxqzKfGfOyc3jQej97Z+/ZozKfGfGrM
xz57/4f51HhcdnGP86kxnxrzqTGfGo/7durV2Tm9phrzqTGfGg67jPez4bc5
nxrzqTGfGvPxc028P66rMZ8a86kxnxqueQP22ftxzKfGfGrMxy7i/f07VWM+
dk6vqcZ8aszHzugVasynxnzxePF5Q4351Ljfu1VjPjXmY+f0WuyMXpdd8vNR
ocZ8asynxnxqzGfe2efQxKu/l3rN91KvxS7i8xg7j/nUmE+N+dSYj53FfOHf
4fevVI352GefJzFf3H6b86kxnxpHNeZTYz7zxuZNzcvy9Pxanvr1PL1/Q823
D3To5Wo8H/Xc66jx/NRzrmdeYV7fvEHMcwveMG6/xfdL6vmhVGM/6rk3UWNf
4bfgzdQ4730eW9yfGvuLvsn9qbE/dsHfR+Rq7C/Ov8H9RX/M/UV/xP2p4aix
PzX2p8b+zBuZV8Z817m/uP069xe3r3J/auwvzo/f53xQNfanxv7U2J8a+1Nj
f+a1zOuY12UX17g/NY5q7E+N/amxv/DpjdTYnxr7U2N/4V3l/qI/5P7UuN+H
VWN/auxPjf2p8fPHnDz6A+4vzn+f+1Njf+q511Onc77P/amxPzX2F53z55ka
+1Njf2rsT439mTczL7uaerWrqVe/mnqNq6nXvJp6efQV7k+N/UW/x/2psT81
9qfG/qLf5f7U2J8a+4vm63qpxv7U2J8a+1Njf+bFdR1e7Vrq1a+lXuNa6jWj
432VGvuL5u+rO2rsT439qbE/NfZn3sC8oXmj6Hgfrcb+1NifGvtTY3/mVT8H
6dWi3+L+1NifGvuLjs81auxPjf2psT819hcdnxvV2J8a+1Njf2rsz7zSvLF5
E/Om5s3MO3vdSbza9dSrX0+9xvXUa15Pvdy8lnkd87rm9cwrzOubNzBvaN7I
vNK8sXkT86bmzcyL1/XsDe5Pjf2psT819qfG/sxrmdcxr2tez7wiusn9qbE/
Nfanxv7U2J95Y/Mm5k3Nm0XH79k+rhr7U2N/auxPjf19nHq5eS3zOuZ1zeuZ
V5jXj46/71Rjf2rsT439qbE/8ybmTc2bmVf9PRy92o3Uq99IvUb0Ze5Pjf2p
sT819qfG/szrmRfvy7Nl7k+N/amxPzX2p8b+zBubNzFvat7MvLPPEYlXu5l6
9Zup17iZes2bqZeb1zKvY17XvJ55hXl98wbmDc0bmVeaNzZvYt7UvJl5WSv1
aq3Uq7dSr9FKvWYr9XLzWuZ1zOua1zOv+px5gftTY39q7E+N/amxP/PG0S9y
f2rsT439qXG8VTX2dyv16rdSrxHd4P7U2J8a+1Njf2rsz7yeeYV5ffMG5g3N
G5lXmjc2b2Le1LyZefF7jvBqt1Ovfjv1GrdTr3k79XLzWuZ1zOua1zOvMK9v
3sC8oXkj80rzxuZNzJuaNzMvu5N6tTupV7+Teo07qde8k3q5eS3zOuZ1zeuZ
V5jXN29g3tC8kXmleWPzJuZNzZuZl91Nz19QY5/q+boWo1/gftXzw5Ia+1bP
vWX13Guat2Jebt6qeS3z2uZ1zNs0r2velnk987bNK8zbMa9v3q55A/P2zBua
t2/eyLwD80rzDs0bm3dk3sS8Y/Om5p2YNzPvNPp5Hj+pGtefGtefGtefGtff
J6m3ZF4jeonXnxrXnxrXn3p+yNW4/sxrmdc2r2Pepnld87bM65m3bV5h3o55
ffN2zRuYt2fe0Lx980bmHZhXmndo3ti8I/Mm5h2bNzXvxLyZeafmxd+bhbew
lnq1tdRbXEu9+lrqLZnXMG/ZvKZ5K+bl5q2a1zKvbV7HvE3zuuZtmdczb9u8
wrwd8/rm7Zo3MG/PvKF5++aNzDswrzTv0LyxeUfmTcw7Nm9q3ol5M/NOzcva
qbfQTr1aO/UW26lXb6feknkN85ajn+X7HzWuP/X8kKtx/alx/ZnXNq9j3qZ5
XfO2zOuZt21eYd6OeX3zds0bmLdn3tC8ffNG5h2YV5p3aN7YvCPzJuYdmzc1
78S8mXmn5mX3Um/hXurV7qXe4r3Uq99LvSXzGuYtm9c0b8W83LxV81rmtc3r
mLdpXte8LfN65m2bV5i3Y17fvF3zBubtmTc0b9+8kXkH0fx3/6Ua158a158a
158a1595x+ZNzTsxb2beqXnVv3Oit3A/9Wr3U2/xfurV76feknkN85bNa5q3
Yl5u3qp5LfPa5nXM2zSva96WeT3zts2Lf3cW/x9oR43rT43rT43rTz0/7Jk3
NG/fvJF5B+aV5h2aNzbvyLyJecfmTc07MW9m3ql51f+LoLewnnq19dRbXE+9
+nrqLZnXMG/ZvKZ5K+bl5q2a1zKvbV7HvE3zuuZtmdczb9u8wrwd8/rm7Zo3
MG/PvKF5++aNzDswrzTv0LyxeUfmTcw7Nm9q3ol5M/NOzcs2Um9hI/VqG6m3
uJF69Y3UWzKvYd6yeU3zVszLzVs1r2Ve27yOeZvmdc3bMq9n3rZ5hXk75vXN
2zVvEM3/Z7inxvWnxvWnxvWnxvVnXmneoXlj847Mm5h3bN7UvBPzZuadmpc9
SL2FB6lXe5B6i9FP8/pTzw9Lalx/alx/alx/5q2Yl5u3al7LvLZ5HfM2zeua
t2Vez7xt8wrzdszrm7dr3sC8PfOG5u2bNzLvwLzSvEPzxuYdmTcx79i8qXkn
5s3MOzUv61T9f0Rz6zM=
       "]]}, 
     {RGBColor[0.5, 0.5, 0.5], PointSize[0.003666666666666667], 
      AbsoluteThickness[1.6], Opacity[0.3], PointBox[CompressedData["
1:eJxd1z9s3PYVwHE2adW0vf5V2oaOk5xsmVHtsxyZcu3zXzq2z/9oO9b5Hzeh
QNlFQAdO2jhp4qaJnTRx0sZJGycBBdhJEzcBBQgE0JCCRVGhRVFY7+4e3pfL
D1+I/PDh4XA4Lfzhz2t//MBxnG8/dJz3J6+/5O+vvTu2/zrrVf/9dYC/N3es
coj7/z7rP8XvrxbPfzvrv9XvryN43+H+f8Dv8Pw/8b5/wfs3vGN4/4H3X3j/
g+cE9n5t8b83a3n+g1nL+z6ctVzfh6ct3g/gzcH7IbyP4GmL9yN4P4b3E3g9
eNri/RTez+D9HN4vcL+2+Nonj/u/xPu05foVPG3xtGWeeXjacn0MT1s8bfF+
DU9brt/A0xZPW7zfwtOW65NJf3dHPG3xtMVzZy2etpyn4J2Cdwrep/A+hXca
3ml4p+F9Bu8zeJ/D+xze5/C+gPcFvP6s5fOlLX4fz2vL+/rwFuAtwFuAtwBv
Ad4ZeGfgnYGnLZ62nGexn7PwzsI7C+8svEV4i/AW4S3CW4R3Dt45eOfgnYN3
Dp4Hz4PnwZv2R4F4055+D305a/G0xdMWT1u8L+EtwVuCtwRvCd4SvN9Nzo8n
3rQ/mXja4mmLpy3n+VmLdx7eeXjTPj3xtOW8MGvxtMXTFu8CvAvwBvAG8Kbd
n3ja4mnLeXHW4mmLdxHeRXgX4S3DW4a3DG8Z3jK8S/AuwbsE7xK8S/C+sve7
0z4TyPeN9snzoba8T/vkSLXl/fBKeDW8Fp6zYj13xXr+ivXCFevFK9ZL4eXw
Sng1vBaecxnzXbaef9l64WXrxZetl8LL4ZXwangtPMfHfNry+fGtF/rWi33r
pfByeCW8Gl4Lz1nFfKvW81etF65aL161Xgovh1fCq+G18JwrmO+K9fwr1gun
vTiZT1vm05b5tGU+bZkPXgvP+b313Gl7k/m0ZT5tmU9b5tOW+eCV8Gp4LTzn
qvXcq9bzr1ovvGq9+Kr1Ung5vBJeDa+F51zDfNes51+zXnjNevE166Xwcngl
vHraS5P5tOUczlrm05b5tGW+ofXiofVSeDm8El4Nr4XnXMd8163nX7deeN16
8XXrpfByeCW8Gl4Lz7mB+W5Yz79hvfCG9eIb1kvh5fBKeDW8Fp5zE/PdtJ5/
03rhTevFN62XwsvhlfBqeC085xbmu2U9/5b1wlvWi29ZL4WXwyvh1fBaeM5t
zHfbev5t64W3rRfftl4KL4dXwqvhtfCcO5jvjvX8aZ+fzKct82nLfNoyn7bM
B6+G18JzAnt/T1vmDezznvbk54P1AnghvAheDC+Bl8LL4OXwimkPJr+XtE+O
Slv2o33iNdqyL3gdPOeu9Xp3refetZ5313r+XesF8EJ4Ebx42suT/WnL/rRl
f9qyP23ZH7wSXjXtryb705b9acv+tGV/2nJ+bb3e19ZztWV/2rI/bdkfvBBe
BC+Gl8BL4WXwcngFvBJeBa+G18Br4XXwnHvW62nL/u5Zz9OW75971gumvTLZ
n7bsT1v2p33iJdqyP3gZvBxeAa+EV8Gr4TXwWngdPOe+9Xr3refet55333r+
fesF8EJ4EbwYXgIvhZfBy+EV8Ep4FbwaXgOvhdfBcx5gfw+s5z6wnvfAev60
J/+3BtqyP23Zn7bsT1v2By+Fl8HL4RXwymlP/m+ttGV/2rI/bdmftuwPnjOy
Xm9kPXdkPW9kPX9kvQBeCC+CF8NL4KXwMng5vAJeCa+CV8Nr4LXwOnjOQ+zv
ofXch9bzHlrPf2i9AF4IL4IXw0vgpfAyeDm8Al4Jr4JXw2vgtfA6eM4j7O+R
9dxH1vMeWc9/ZL0AXggvghfDS+Cl016d7E9b9qct+9OW/WnL/uDV8Bp4LbwO
nvPYer3H1nMfW897bD3/sfUCeCG8CF4ML4GXwsvg5fAKeCW8Cl4Nr4HXwuvg
OU+wvyfWc59Yz3tiPf+J9QJ4IbwIXgwvgZfCy+Dl8Ap4JbwKXg2vgdfC6+A5
T7G/p9Zzn1rPe2o9/6n1AnghvAheDC+Bl8LL4OXwCnglvApeDa+B18Lr4Dkh
9hdazw2t54XW80PrBfBCeBG8GF4CL4WXwcvhFfBKeBW8Gl4Dr4XXwXOeYX/P
rOc+s573zHr+M+sF8EJ4EbwYXgIvhZfBy+EV8Ep4FbwaXgOvhdfBc55jf8+t
5z63nvfcev5z6wXwQngRvBheAi+Fl8HL4RXwSngVvBpeA6+F18FzXmB/L6zn
vrCe98J6/gvrBfBCeBG8GF4CL4WXwcvhFfBKeBW8Gl4Dr4XXwXO+sffPacs+
tU/WNa8t+/3Gen14HrwBPB/eEF4AbwQvhDeGF8FbhxfD24CXwNuEl8LbgpfB
24aXw9uBV8DbhVfC24NXwduHV8M7gNfAO4TXwjuC18E7hue8tN7cS+v1Xlpv
/qX13JfW68Pz4A3g+fCG8AJ4I3ghvDG8CN46vBjeBrwE3ia8FN4WvAzeNrwc
3g68At4uvBLeHrwK3j68Gt4BvAbeIbwW3hG8Dt4xPGfNenNr1uutWW9+zXru
mvX68Dx4A3g+vCG8AN4IXghvDC+Ctw4vhrcBL4G3CS+FtwUvg7cNL4e3A6+A
twuvhLcHr4K3D6+GdwCvgXcIr4V3BK+DdwzPGVtvbmy93th682PruWPr9eF5
8Aba8vsH3hBeAG8EL4Q3hhfBW4cXw9uAl8DbhJfC24KXwduGl8PbgVfA24VX
wtuDV8Hbh1fDO4DXwDuE18I7gtfBO4bnvLLe3Cvr9V5Zb/6V9dxX1uvD8+AN
4PnwhvACeCN4IbwxvAjeOrwY3ga8BN4mvBTeFrwM3ja8HN4OvALeLrwS3h68
Ct4+vBreAbwG3iG8Ft4RvA7eMTzntfXmXluv99p686+t5762Xh+eB28Az4c3
hBfAG8EL4Y3hRfDW4cXwNuAl8DbhpfC24GXwtuHl8HbgFfB24ZXw9uBV8Pbh
1fAO4DXwDuG18I7gdfCO4TlvrDf3xnq9N9abf2M99431+vA8eAN4PrwhvADe
CF4IbwwvgrcOL4a3AS+BtwkvhbcFL4O3DS+HtwOvgLcLr4S3B6+Ctw+vhncA
r4F3CK+FdwSvg3cMz3lrvbm31uu9td78W+u5b63Xh+fBG8Dz4Q3hBfBG8EJ4
Y3gRvHV4MbwNeAm8TXgpvC14GbxteDm8HXgFvF14Jbw9eBW8fXg1vAN4DbxD
eC28I3gdvGN4zjvrzb2zXu+d9ebfWc99Z70+PA/eAJ4PbwgvgDeCF8Ibw4vg
rcOL4W3AS+BtwkvhbcHL4G3Dy+HtwCvg7cIr4e3Bq+Dtw6vhHcBr4B3Ca+Ed
wevgHcNzoln/H9VIa6A=
       "]]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
vxqsA9Mpv6p02Tk5OZ2/53x/Ur4L+h+2JAVJ
        "]]},
      Annotation[#, "Charting`Private`Tag$104755#1"]& ], 
     TagBox[
      {RGBColor[0, 0., 0.6], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
Pu97f4Lp/wHee0mG
        "]]},
      Annotation[#, "Charting`Private`Tag$104755#2"]& ], 
     TagBox[
      {RGBColor[0.99, 0., 0.], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVl3k01V8Xxi8hQuYxlfm6gynDD9H3yZRMZco136uEoohSkSGSTClCFCpT
KqQoKqJSKpKSolIpqSi5hiS89/3rrM86z9rn7Ofss886Sv67nQO4SSTSci4S
6f+j8vH5C0WrWte92++iy0UaJ27wU1aHBhUTYSMF5CLrcaJ1f3WpRlAN8ahh
sCksc5xo1wkP5AtqIQrmxGafKP0mHqX32EwFPiOU6IdeT7hPEONJQl/3Vz0n
vuuUN7+snCAO3auhzJS8IMZnGbWycxNELqar2Rl9xJQ7q/X9BTbRYZLYOBo4
SHwWqckTXTpFXDKViDWo+UDsEwk9VbN1ivg9sK04suojoXHPwHyodYqIlef/
NFEyROiaau1XSZwm8vIcA39lfCVqx+rVOuX+EI9PDISPBP4iFr0rsjYVzREp
+bkd2brjRKC9HrlC5h9BDyI89WrGiepnkX+Fs/8Re5aeiN5T9ZtgErQAetY8
sWCl3zxewiYKwp88uFS6SJyTeueYtWqSaBzwwx0ZEiy/HBnUPjNJ5L274urk
S0JaUh9pd94UodMAV4lfJMjeO2gxljFDfLQsG8xYzY1bJ1Vepgv+IeqaP7d/
28UNX/+n2+jH/hB6wVXUMy3cKOValbwzaZZQSTzEkg9YAl20Pvp2cI6g3+t4
rdTKA9s7Sx2HAxcJ5cy+7zfblkJ30X9KenyRcJ2azJLT40e6ol+XiikJFiTJ
nMQyfkT6N+11vU/ChYNq7/OzBGA5HHa//iUX4g7I3+yMF4TR0VWyXbLcEL0c
pBzPLQS6xtOdw97cMKU+mkhJFoLEDrKEzBduBPAP32w/JYxPY+9Y+6eWoClV
e7tcjwheZabVZxnzQOd9xooXeqJ4rG0scPEQD0QDjBd+xYmiLjyn9g0vLxTO
vPphoSCGhCnbRRNpPmS33FdeCBCH4vyNM/OG/Fih5xZjbiEFyaKAcalofnQ9
cPdilEuBn5Cw1Grhx7HK2Y80QWn8it/1w3eDAIQPsXoo/dJo5lEzueu+DHon
qpudM2VRV9aT8bpwGSaucNeSSXIot47/OD64DKKFqdozEXLITBlIUQoSxI0D
OpfKWfLwETrZd3i/EKYNyLGaWxSw+QpBK7wthO3cKwvvvFaApeNY7DUSJ++B
63vTfFaCnmWj/jlFGJeOXlfk2bUK/yQWI61OL4dA3A6JOjdFdAobCvD4iELV
QWnT8m5l9NiJ53fFiCKzT5bnzmoVvD72U/30GVEUHD1jUBmmgs+8FZZab0Ux
GJ/02lJaFf/mZeIZXmKY7I5LEQ5XA7fp5HKVaDG4tqz9K/1EDfwHu8+OFYiB
DLVtcerqkJhOuXW4Xwxnr619G/tRHdSfs9OXPcThsv68R32QBnTor45EHRDH
cCi1V69LA4Y76iTNT4vj+42IGAMDCsyHd6zpey2OuVM5914upcLj/UAoF0MC
sTKNorx3aUjpuvPZbYskwjcI37OL10amUEGE4j5JCJBf02VIOsix3cf945Qk
SpRDLvyCDorbtRTjeyXRl3dhn98DHTQ0F3tVuUrhchx3VMwbXXypTuhZcJaG
TWE9q0ZHH99HfVgde6RBoUqOa8TrY5xqMp59UhqSPElS1d36+Fc+IUzp4cwH
sw2GIg0gWbx1o4uTDJwvZhO6jw1hftzqbsUmWajfFV4vXGWMeNvrF3t2yWLX
VfsFMwETNPOqZM9nyGLbe1lyerAJTGJI212eysJ/WjQhWXMt9IJvCS7ayGHl
pOSo2D1TqFroum8xl8ea/pKxq+KA/0IxEjh1os519m2kHVDSuJx6OV4e6V6J
WzqTAAWd0X9cLfLgI8VVE7OA1MqK81fWrsAl439e9G/rwTej8JPHQAEtLwZK
/362gGVdWp+2qwKO/9xpIEy2xOHQv3c9IxRwTtjkyNVgSywM9WXXXlXAsoji
w5fHLTHTfdLYW2slmifTr7jzWmOkiv/INfIqjFBMWwttbBCg/VdYV1gRBxWy
c73pDrAfOFomu0oRzLquGaUjDtA/KmVG0laEY9bna27vHcAzqBPybLMibDv3
i8ydcMT5zMDHoTmKqCXywnrnN2Fw7GVy1QolNC7f4Wm8xwkel2sWVajKWBZa
/KUp0BVgmOUJrlWGT1NBqVyeKzR4nmix7ZRRoLR1bEe7K/54Dfu0hSpDPjby
6ICqG3IFV95mXlXGevXvinUf3PBiR+r+s0YqMGWkzag6u8OBEvBbeoMq6m8X
pxQIeeJv2t5b77aoYtfCNRpFzxOVP48cKd2uCn9X4y9hHp7guV4utyZZFUmW
5+nqZZ5oWjey3uGBKq54dPfwGHtB3XXnyUQLNdSxj+sXOnnjZUO0t62LGm73
/aRoR3gjQS5dXWyrGqY1T5N35njj7fvLTUWH1ZAVYDTS1+uN7OCfnxpb1ZAq
luG+x9UHpLhwvXFCHf1X/3hrwRfVHxPmGzapw6WH1+Svly+8LE8+POSnjjZy
2beAKF80CFzzEoxTh4j9+vEVV3wRkjOZqN6sDknhuKRFCT/Iz/A4jnWq46B/
yZJ2uh8eekjJXn+njnNHdvjRrPygvNrw8vp5TvxazPVE+uHNxaiX3qZkePt+
TM1/5odkoZQiFXsy6nOLEhhf/KC/Oz/ouxcZmzdKGdz864cs/cZ/UdFkSIen
TdPEmbBu+aua3UTGugH/NVnGTEwqCf7yeEzGPY0yHrY5E+eSVjQq9pMxa534
Rd2eiX8bTR2qZ8noNkq8yu3LRN3LQ3s7jDRwouPC0aw4JiqPbPP/tFEDrUVH
JagpTBQZ2m2a89TA4MytgswsJlLzZSmahzSwxnRYoKmEia3e195mtWpgilUT
UdrMhKdwQcfFHg3I6XZ9Kn7AxObm+Ia2IQ2E/sjWD37KhKmiY9YkLwXtPqKU
wDdMSH4esWDYUrA5w5i94jcTy0490wn3oiAk5rXUyWkmSNYNK1NDKLh2ji/i
zRwToxWJM7cyKfCytb74jpeFT4wdn18WU7BaxCCocBkLrwWcno/VUnC/OFeT
LsLCg52rLq1+QcG+ipC8RzIs3FbgzTf6TEHHkzml3hUs1HX+SHKaosA5w+5w
w2oWirQbfRNlqHDnciyZVWch50Ox3RkNKt7ONNh5U1lIPZFsVG9MhaTlscpT
mizsY7uIf/WiojbglVOmHgshpSaLiyFUhEbS0h0NWfB3UxqVjaXCZP6u61cj
Fhh8/G90j1NR7PtU2WMtC443fj6wLaEi+9h/oaVmLFgG9dZtvUqF8O7Rqg6C
BRO528UxbVRO/+l17ljPAjn62IHqz1RsHhm57WHFwip62PaHU1QsHJsN+WHN
guS7LS4f+GjI/njZ38OGhWWZZpiVoWFuwlu8dCMLJEJVU5xCw8M2ofEntixM
/1omTzPhvANuLbuf27EwWvKbz9KOhu6aKN56e46/Tq/Z3t406LwyUoty4PjL
3fJhbygNRp28FrKOLHRdK+vMjKXhj95wTz6H729Lb6o4TkOv9J4Nsxxukoqo
uFtCw1bdRRGTTSxcbffIeXOVhgSepEIvDldGIWGijYblYjMMXw4XaZB3Cb6k
4Xuf4w1zDue8EfZS/UID+02CmgCHU1MnN5hN07AsP1m8jhM/fu2A/paldGwY
2TRmxuF9o61Ku2Xp2P2kXPkKZ78hZyuXp1DoiCdvX0HisL/j8bkSEzryPHjw
Hyc/xuLekUY7Ol42z/xx5uTvWOvd2+NNh9v1hmoXjj+WLIu2H6F0/Jd3o8OY
499acWoNTxwdhffD6ng5/nZxeXZ0Hqejvy9fuZnjP/P3saHcEjr2qY7J+HLO
J6n7mwyljQ6prw+4t5izIH1Xbs1ED4dX8NZWg4WLNRvtbw3RscbTwXl8HSde
5sV4B15NtO3d9UWbUx/M2DcF0tKaSH9OytQyZmEiVKB+UF0TitPk0zL/sSDj
EPwt3EYTRiVWtKo1HL0gxTk3TRNvh4ei+zU4+r+MEL8zmuBz9ok24NRz0veU
ZI0rmtjm5Xb4kApn/Y6RpqYuTdj5ZQ32ruToj1aqDIppIUwpRKlWjKPn0Zgi
52tB4sJQmj3nPkpPuov8rtSCSNBu28IJTr8YOkppatRCtOGp4oGfTHS2ffWx
H9CCgiIn0a8cfUJFe9gqbTildUSa9TFxcV49v7FUG1aFhQnc9UwEzp08W8bQ
gYu8munDICZyHEfvHWDqIC1BO0h0GxN3z1l9dwjSwXXt3I/OfkzI2vwxnI7S
gff1COK+GxOPcny6rfN0kFvhaOrN6XcULY0lI7060BDYvxAjz8QP5p0gqosu
RNxWm2Rk+mF3+1e9Goc1qDvR+O2Hti9SPfnU5kP0oXa+MihJxQtbH0Zv1w0y
xCjX6HlaMAOtS+WcdnoY4fGXltmT427QFYvP/RZpgoDVC97Oh13AZJvRHUNM
cbqrjB643wnnih4ozGSsQ8DpElj+c8S1TJOBHmdAxbjU9P5RO0Q2mW0+a78e
NQXRi3PlNmh5XDZxzMscgW0ehiLvrRC8wfhOMMMC7leCB1QyLHCmUrd+5w5L
0PLXDK90Wo8T7DsJYVFWSL15zJC3eR2Gq/buC9pjjXSbPcerEtbivvXJ/MOH
N6A/xutqOcsIXJv6Px2Pt4Hy6JKuoUcGIK1v4Co5sBHP6fObvyXoIUVmxqHn
qC2M7INGlB11Eea5tW0m0Q4Bw+TtK9la+Jigv404ZY+eLOaymR00SGaf7j92
zoHzUqYO3XLXQLko9cDDQkcgNvu2aYcaWvestiJf2oSdfWnlI5tVUKRYomDm
uhk62vIWsRZKuBPzlxTUvRmqPLfSbcdWQclu6T8VdycoHipBWvgKXH9GSXvz
0glzwwsM13RZpLcv6Cj6OONt5W/xwbtSyI74toP51hky15aaHdklgRipVSLK
Hi5I4eKODw8Qw0UK7+PIDy6Imis8ETewHHyTXHKtvq7o5Ypy8coVRIXO1dii
r66cc6Ik8u/mB8W/ynE+1A2x5orfzGt5MbCxsc7thxsWGL/ihYKWoOfCQU0i
Ygu+UqhX+vS48Oeak6nyxBY0Su47odm8QCze3FOfvMsdQ69otXwpc4SdjrVV
zJQ76k7VnhoM+UM89NEO3hnBQILdnTy+11OE+NagW2f3MhDw8L81qp1ThG/Q
OeHuKAaGP0Ubb2ibIqb3SNTpxzCw8vSBxLOXpwjVlJm/80kM3Nw2czM1YYqI
r2tJz8ploCvVb0MAfYowWbq5tr6RAZOlgZr8yZNEstAx7pFbDAhVW2p2RU8S
z8XaXOWbGbic1mt1OnySCFLQn41tY4DrhNiNdT6cf62urLnNEwYs7Wdc2vUn
iUmvDy/63zLwp/3shvbPbAIsOXXhQQbqrNvK3/azibTtzvuJjwzo55yZnulm
E8rh9xVKvzBgti7C1+wOm3BKrgwI/clA2ZYr/Ety2cSZtI83iscZaHiaVIF0
NjGSJb+sZ4KBJd4SKomH2UR8YXq14QwDq0O2lEvvZhNPSx6QgmcZeEoIXgwM
YBMy5QvOhXMMxPZExd7xYhP+l/4r65xnoMhBQVXWmU1U14bNLC4ycLp/f16U
DZv4H3H8azA=
        "]]},
      Annotation[#, "Charting`Private`Tag$104755#3"]& ], 
     TagBox[
      {RGBColor[0., 0., 0.], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
EujdsvrTmu3/AU48VYw=
        "]]},
      Annotation[#, "Charting`Private`Tag$104755#4"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100.}, {0, 250}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.796612766752955*^9, {3.7966128175663767`*^9, 3.7966128417418327`*^9}, 
   3.796612985663628*^9, 3.796613015878272*^9, 3.79661308803325*^9, 
   3.7966131253229523`*^9, 3.7966263716481943`*^9, 3.7967529771019*^9, 
   3.800922627199687*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"3b3735e5-697c-4dc3-8d15-ecdb50593c85"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 835},
WindowMargins->{{0, Automatic}, {0, Automatic}},
WindowStatusArea->None,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Equations", "Subsubsection"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Equation"], CellMargins -> {{36, 6}, {7, 7}}, 
          ConversionRules :> {
           "HTML" -> {{"", ""}, {"<p class=\"Equation\">", "</p>"}}}, 
          CellHorizontalScrolling -> True, CellFrameLabels -> {{None, 
             Cell["", "EquationNumber"]}, {None, None}}, DefaultFormatType -> 
          TraditionalForm, InputAutoReplacements -> {}, TextAlignment -> 
          Center, CounterIncrements -> "Equation", MenuSortingValue -> 1400, 
          MenuCommandKey -> "5", FontFamily -> "Times", 
          ButtonBoxOptions -> {Appearance -> {Automatic, None}}], 
         Cell[
          StyleData["Equation", "FlushLeft"], 
          CellMargins -> {{36, 12}, {7, 7}}, TextAlignment -> Left], 
         Cell[
          StyleData["Equation", "Presentation"], 
          CellMargins -> {{72, 9}, {11, 11}}, FontSize -> 24], 
         Cell[
          StyleData["Equation", "Condensed", StyleDefinitions -> None]], 
         Cell[
          StyleData["Equation", "Printout"], 
          CellMargins -> {{36, 2}, {5, 5}}], 
         Cell[
          StyleData["Equation", "FlushLeftPrintout"], TextAlignment -> Left], 
         
         Cell[
          StyleData["Equation", "DoubleSpacedPrintout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["EquationGroup"], CellMargins -> {{36, 6}, {0, 2}}, 
          CellGroupingRules -> "GraphicsGrouping", 
          TaggingRules :> {
           "ExtraConversionRules" -> {
             "General" -> {"NestingLevel" -> 1, "Numbered" -> False}, 
              "TeX" -> {"CellGroupEnvironment" -> "gather*"}}}, 
          CellFrameLabels -> {{None, 
             Cell["", "EquationNumber"]}, {None, None}}, DefaultFormatType -> 
          DefaultInputFormatType, TextAlignment -> Center, StyleMenuListing -> 
          None, ButtonBoxOptions -> {Appearance -> {Automatic, None}}], 
         Cell[
          StyleData["EquationGroup", "FlushLeft"], 
          CellMargins -> {{36, 12}, {0, 2}}, TextAlignment -> Left], 
         Cell[
          StyleData["EquationGroup", "Presentation"], 
          CellMargins -> {{72, 9}, {0, 3}}, FontSize -> 24], 
         Cell[
          StyleData["EquationGroup", "Condensed", StyleDefinitions -> None]], 
         
         Cell[
          StyleData["EquationGroup", "Printout"], 
          CellMargins -> {{36, 2}, {0, 1}}], 
         Cell[
          StyleData["EquationGroup", "FlushLeftPrintout"], TextAlignment -> 
          Left], 
         Cell[
          StyleData["EquationGroup", "DoubleSpacedPrintout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["EquationGroupAligned"], CellMargins -> {{36, 6}, {0, 2}},
           CellGroupingRules -> "GraphicsGrouping", 
          TaggingRules :> {
           "ExtraConversionRules" -> {
             "General" -> {"NestingLevel" -> 1, "Numbered" -> False}, 
              "TeX" -> {"CellGroupEnvironment" -> "align*"}}}, 
          CellFrameLabels -> {{None, 
             Cell["", "EquationNumber"]}, {None, None}}, DefaultFormatType -> 
          DefaultInputFormatType, TextAlignment -> Center, StyleMenuListing -> 
          None, ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
          UnderoverscriptBoxOptions -> {LimitsPositioning -> False}, 
          UnderscriptBoxOptions -> {LimitsPositioning -> False}, 
          OverscriptBoxOptions -> {LimitsPositioning -> False}, 
          GridBoxOptions -> {AllowScriptLevelChange -> False}], 
         Cell[
          StyleData["EquationGroupAligned", "FlushLeft"], 
          CellMargins -> {{36, 12}, {0, 2}}, TextAlignment -> Left], 
         Cell[
          StyleData["EquationGroupAligned", "Presentation"], 
          CellMargins -> {{72, 9}, {0, 3}}, FontSize -> 24], 
         Cell[
          StyleData[
          "EquationGroupAligned", "Condensed", StyleDefinitions -> None]], 
         Cell[
          StyleData["EquationGroupAligned", "Printout"], 
          CellMargins -> {{36, 2}, {0, 1}}], 
         Cell[
          StyleData["EquationGroupAligned", "FlushLeftPrintout"], 
          TextAlignment -> Left], 
         Cell[
          StyleData["EquationGroupAligned", "DoubleSpacedPrintout"]]}, 
        Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Numbered Equations", "Subsubsection"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "EquationNumbered", StyleDefinitions -> StyleData["Equation"]], 
          ConversionRules :> {
           "HTML" -> {{"", ""}, {
              "<table class='EquationNumbered'><tr><td>", Automatic, 
               IncludeCount[
               "</td><td \
class='EquationNumberedLabel'>(`1`)</td></tr></table>", 
                "EquationNumbered"]}}}, 
          TaggingRules :> {
           "CounterSettings" -> {
             "CounterFormat" -> {"EquationNumbered"}, "CounterTarget" -> 
              "Cell", "XRefPrefix" -> "Equation"}}, CellHorizontalScrolling -> 
          True, CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["EquationNumbered"], ")"}]]}, {None, None}}, 
          CounterIncrements -> "EquationNumbered", MenuSortingValue -> 1450, 
          MenuCommandKey -> "6"], 
         Cell[
          StyleData["EquationNumbered", "FlushLeft"]], 
         Cell[
          StyleData["EquationNumbered", "Presentation"]], 
         Cell[
          StyleData[
          "EquationNumbered", "Condensed", StyleDefinitions -> None]], 
         Cell[
          StyleData["EquationNumbered", "Printout"]], 
         Cell[
          StyleData["EquationNumbered", "FlushLeftPrintout"]], 
         Cell[
          StyleData["EquationNumbered", "DoubleSpacedPrintout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "EquationGroupNumbered", StyleDefinitions -> 
           StyleData["EquationGroup"]], 
          ConversionRules :> {
           "HTML" -> {{"", ""}, {
              "<table class='EquationGroupNumbered'><tr><td>", Automatic, 
               IncludeCount[
               "</td><td \
class='EquationGroupNumberedLabel'>(`1`)</td></tr></table>", 
                "EquationNumbered"]}}}, 
          TaggingRules :> {
           "CounterSettings" -> {
             "CounterFormat" -> {"EquationNumbered"}, "CounterTarget" -> 
              "Cell", "XRefPrefix" -> "Equation"}, 
            "ExtraConversionRules" -> {
             "General" -> {"Numbered" -> True}, 
              "TeX" -> {"CellGroupEnvironment" -> "gather"}}}, 
          CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["EquationNumbered"], ")"}]]}, {None, None}}, 
          CounterIncrements -> "EquationNumbered"], 
         Cell[
          StyleData["EquationGroupNumbered", "FlushLeft"]], 
         Cell[
          StyleData["EquationGroupNumbered", "Presentation"]], 
         Cell[
          StyleData[
          "EquationGroupNumbered", "Condensed", StyleDefinitions -> None]], 
         Cell[
          StyleData["EquationGroupNumbered", "Printout"]], 
         Cell[
          StyleData["EquationGroupNumbered", "FlushLeftPrintout"]], 
         Cell[
          StyleData["EquationGroupNumbered", "DoubleSpacedPrintout"]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "EquationGroupAlignedNumbered", StyleDefinitions -> 
           StyleData["EquationGroupAligned"]], 
          ConversionRules :> {
           "HTML" -> {{"", ""}, {
              "<table class='EquationGroupAlignedNumbered'><tr><td>", 
               Automatic, 
               IncludeCount[
               "</td><td \
class='EquationGroupAlignedNumberedLabel'>(`1`)</td></tr></table>", 
                "EquationNumbered"]}}}, 
          TaggingRules :> {
           "CounterSettings" -> {
             "CounterFormat" -> {"EquationNumbered"}, "CounterTarget" -> 
              "Cell", "XRefPrefix" -> "Equation"}, 
            "ExtraConversionRules" -> {
             "General" -> {"Numbered" -> True}, 
              "TeX" -> {"CellGroupEnvironment" -> "align"}}}, 
          CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["EquationNumbered"], ")"}]]}, {None, None}}, 
          CounterIncrements -> "EquationNumbered"], 
         Cell[
          StyleData["EquationGroupAlignedNumbered", "FlushLeft"]], 
         Cell[
          StyleData["EquationGroupAlignedNumbered", "Presentation"]], 
         Cell[
          StyleData[
          "EquationGroupAlignedNumbered", "Condensed", StyleDefinitions -> 
           None]], 
         Cell[
          StyleData["EquationGroupAlignedNumbered", "Printout"]], 
         Cell[
          StyleData["EquationGroupAlignedNumbered", "FlushLeftPrintout"]], 
         Cell[
          StyleData["EquationGroupAlignedNumbered", "DoubleSpacedPrintout"]]},
         Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["EquationNumber"], CellSize -> {24, Inherited}, 
          TextAlignment -> Right, StyleMenuListing -> None], 
         Cell[
          StyleData["EquationNumber", "FlushLeft"]], 
         Cell[
          StyleData["EquationNumber", "Presentation"], 
          CellSize -> {36, Inherited}], 
         Cell[
          StyleData["EquationNumber", "Condensed", StyleDefinitions -> None]], 
         Cell[
          StyleData["EquationNumber", "Printout"], 
          CellSize -> {20, Inherited}], 
         Cell[
          StyleData["EquationNumber", "FlushLeftPrintout"]], 
         Cell[
          StyleData["EquationNumber", "DoubleSpacedPrintout"]]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Linux x86 (64-bit) (March 6, 2018)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 364, 6, 98, "Title",ExpressionUUID->"4341873e-65a7-401d-a7af-f57cb3b545f2"],
Cell[947, 30, 228, 4, 35, "Text",ExpressionUUID->"8ce6a5c9-a294-4c1b-bd36-af6ff0cf747a"],
Cell[CellGroupData[{
Cell[1200, 38, 270, 4, 68, "Section",ExpressionUUID->"c03c1a10-9fb7-441d-a6e9-f53a38023b3c"],
Cell[CellGroupData[{
Cell[1495, 46, 169, 3, 55, "Subsection",ExpressionUUID->"0a396bbb-cae7-4e21-84b1-8065898cf6f1"],
Cell[1667, 51, 10624, 235, 1594, "Code",ExpressionUUID->"e1918e43-7078-498d-b72e-cf2daf9f94ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12328, 291, 166, 3, 55, "Subsection",ExpressionUUID->"d0516476-c1a5-406a-b768-562f79ba63e0"],
Cell[12497, 296, 26002, 529, 2452, "Code",ExpressionUUID->"c284dfd7-825c-4195-9a03-66f7b8257056"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38536, 830, 155, 3, 55, "Subsection",ExpressionUUID->"a8dd96e1-31b2-4a4b-aaf3-e10367b0d18f"],
Cell[CellGroupData[{
Cell[38716, 837, 10078, 209, 780, "Code",ExpressionUUID->"c6b0da63-3f57-451e-a447-df63fa2e39c5"],
Cell[48797, 1048, 4784, 93, 676, "Output",ExpressionUUID->"62bed2bd-f3e7-4281-a697-e91c2545c5c7"]
}, Open  ]],
Cell[53596, 1144, 129, 3, 31, "Input",ExpressionUUID->"ce3bb138-cfe1-4b59-a26a-16c7c3426786"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53762, 1152, 176, 3, 55, "Subsection",ExpressionUUID->"e6679884-33f3-48fa-8a9c-66b113bc8241"],
Cell[CellGroupData[{
Cell[53963, 1159, 10622, 233, 1066, "Code",ExpressionUUID->"281d3637-e940-44b2-a538-3bb0c64e9944"],
Cell[64588, 1394, 237, 3, 35, "Output",ExpressionUUID->"dd16b3e0-4d83-4cc8-af3b-ef8c25e4c51b"],
Cell[64828, 1399, 237, 3, 35, "Output",ExpressionUUID->"6a319a3b-4c15-4f04-add4-d7394d28cace"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65102, 1407, 622, 12, 55, "Input",ExpressionUUID->"f4c6ee3d-ac46-41f3-b5a3-4b2e5fc28687"],
Cell[65727, 1421, 399, 9, 22, "Message",ExpressionUUID->"6285350f-e101-48d9-83b7-9c64100db17b"],
Cell[66129, 1432, 202, 3, 35, "Output",ExpressionUUID->"98e7a49c-76de-4618-a7a3-4b6703da06a8"]
}, Open  ]],
Cell[66346, 1438, 159, 3, 31, "Input",ExpressionUUID->"e7b3e15d-6adc-40d0-b542-ee34b558e2d0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66554, 1447, 394, 6, 68, "Section",ExpressionUUID->"10ab7b92-607b-4101-875c-0b74d9b0c0cd"],
Cell[66951, 1455, 698, 12, 58, "Text",ExpressionUUID->"b318f2d8-cdcb-47f4-8b71-4e4e652de6ee"],
Cell[67652, 1469, 912, 27, 205, "DisplayFormula",ExpressionUUID->"f87d0c0b-31ef-4e97-8f64-aa328dfcdd73"],
Cell[68567, 1498, 1735, 42, 58, "Text",ExpressionUUID->"b739c037-5a95-4621-91da-7c7121ff4c1c"],
Cell[70305, 1542, 993, 27, 101, "Input",ExpressionUUID->"54a557c6-cd75-4c75-bb8b-b9eb99b2f621"],
Cell[71301, 1571, 152, 3, 31, "Input",ExpressionUUID->"f0495820-440a-49d2-ab5e-46945e7177a8"],
Cell[71456, 1576, 367, 10, 31, "Input",ExpressionUUID->"0edc76ac-160d-4764-ab5b-a6c6c5f90538"],
Cell[71826, 1588, 6654, 165, 598, "Code",ExpressionUUID->"e1c8e9eb-02ce-4249-8860-a677731af3ac"],
Cell[78483, 1755, 662, 14, 58, "Text",ExpressionUUID->"661d3efe-5771-46dc-873d-9809c2feefc7"],
Cell[CellGroupData[{
Cell[79170, 1773, 3196, 76, 252, "Code",ExpressionUUID->"fbf5aa7a-41a0-4c15-93d1-82ff43fcf763"],
Cell[82369, 1851, 40660, 691, 416, "Output",ExpressionUUID->"836891e0-446b-4161-934e-735e4bb0c787"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123066, 2547, 7970, 207, 784, "Code",ExpressionUUID->"964d22a9-f80b-4920-99cb-1c02a8bc7cf7"],
Cell[131039, 2756, 492, 10, 35, "Output",ExpressionUUID->"58490773-770c-4f64-a39a-cafcdc304b31"],
Cell[131534, 2768, 41242, 703, 247, "Output",ExpressionUUID->"3b3735e5-697c-4dc3-8d15-ecdb50593c85"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

